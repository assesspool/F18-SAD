{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-user-login/add-user-login.component.css","webpack:///./src/app/add-user-login/add-user-login.component.html","webpack:///./src/app/add-user-login/add-user-login.component.ts","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart-of-accounts.ts","webpack:///./src/app/chart-of-accounts/chart-of-accounts.component.css","webpack:///./src/app/chart-of-accounts/chart-of-accounts.component.html","webpack:///./src/app/chart-of-accounts/chart-of-accounts.component.ts","webpack:///./src/app/general-ledger/general-ledger.component.css","webpack:///./src/app/general-ledger/general-ledger.component.html","webpack:///./src/app/general-ledger/general-ledger.component.ts","webpack:///./src/app/generalLedger.ts","webpack:///./src/app/home-screen/home-screen.component.css","webpack:///./src/app/home-screen/home-screen.component.html","webpack:///./src/app/home-screen/home-screen.component.ts","webpack:///./src/app/individual-journal/individual-journal.component.css","webpack:///./src/app/individual-journal/individual-journal.component.html","webpack:///./src/app/individual-journal/individual-journal.component.ts","webpack:///./src/app/individual-ledger/individual-ledger.component.css","webpack:///./src/app/individual-ledger/individual-ledger.component.html","webpack:///./src/app/individual-ledger/individual-ledger.component.ts","webpack:///./src/app/journal.ts","webpack:///./src/app/journalAccount.ts","webpack:///./src/app/journalize/journalize.component.css","webpack:///./src/app/journalize/journalize.component.html","webpack:///./src/app/journalize/journalize.component.ts","webpack:///./src/app/login-home/login-home.component.css","webpack:///./src/app/login-home/login-home.component.html","webpack:///./src/app/login-home/login-home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/reset-password/reset-password.component.css","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/services/coa.service.ts","webpack:///./src/app/services/general-ledger.service.ts","webpack:///./src/app/services/journalize.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/shared-data.service.ts","webpack:///./src/app/services/user-log.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/trial-balance/trial-balance.component.css","webpack:///./src/app/trial-balance/trial-balance.component.html","webpack:///./src/app/trial-balance/trial-balance.component.ts","webpack:///./src/app/user-log/user-log.component.css","webpack:///./src/app/user-log/user-log.component.html","webpack:///./src/app/user-log/user-log.component.ts","webpack:///./src/app/user-page/user-page.component.css","webpack:///./src/app/user-page/user-page.component.html","webpack:///./src/app/user-page/user-page.component.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h3, label, p {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#height {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"center\\\" >\\r\\n  <div id=\\\"height\\\">\\r\\n    <h3>Add User</h3>\\r\\n    <div [hidden]=\\\"submitted\\\">\\r\\n      <form #addUserForm=\\\"ngForm\\\">\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"firstName\\\">First Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"Give User's FirstName\\\"\\r\\n                 required\\r\\n                 [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\">\\r\\n          <div [hidden]=\\\"firstName.valid || firstName.pristine\\\"\\r\\n               class=\\\"alert alert-danger\\\">\\r\\n            First Name is required\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Give User's LastName\\\"\\r\\n                 required\\r\\n                 [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\" #lastName=\\\"ngModel\\\">\\r\\n          <div [hidden]=\\\"lastName.valid || lastName.pristine\\\"\\r\\n               class=\\\"alert alert-danger\\\">\\r\\n            Last Name is required\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email</label>\\r\\n          <input type=\\\"string\\\" (ngModelChange)=\\\"compareEmail($event)\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\r\\n                 placeholder=\\\"Give User's Email\\\"\\r\\n                 required\\r\\n                 [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\">\\r\\n          <div [hidden]=\\\"email.valid || email.pristine\\\"\\r\\n               class=\\\"alert alert-danger\\\">\\r\\n            Email is required\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"emailExist == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n          Email already exists\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"btn-group btn-group-sm\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"addUser()\\\" [disabled]=\\\"!addUserForm.form.valid\\\">Add</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div [hidden]=\\\"!submitted\\\">\\r\\n      <p>Submitted Successfully! -> <span class=\\\"badge badge-light\\\">{{user.firstName}}  {{user.lastName}}</span></p>\\r\\n      <div class=\\\"btn-group btn-group-sm\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack(); addUserForm.reset()\\\">Continue</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../user';\r\nimport { UserService } from '../services/user.service';\r\nimport { UserLogService } from '../services/user-log.service';\r\nimport { Location } from '@angular/common';\r\nimport { AppComponent } from '../app.component';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-add-user-login',\r\n  templateUrl: './add-user-login.component.html',\r\n  styleUrls: ['./add-user-login.component.css']\r\n})\r\nexport class AddUserLoginComponent implements OnInit {\r\n\r\n  user = new User();\r\n  submitted = false;\r\n  emailExist = 1;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private location: Location,\r\n    private logData: UserLogService,\r\n    private comp: AppComponent,\r\n    private data: SharedDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  newUser(): void {\r\n    this.submitted = false;\r\n    this.user = new User();\r\n  }\r\n\r\n  addUser() {\r\n    this.save();\r\n  }\r\n\r\n  goBack(): void {\r\n    this.data.changeToggle(1);\r\n  }\r\n\r\n  //check if the Email already exists on create screen\r\n  compareEmail(event) {\r\n    this.user.email = event;\r\n    this.userService.compareEmail(this.user.email).subscribe( response => {\r\n      this.emailExist = response;\r\n      console.log(this.emailExist);\r\n    });\r\n  }\r\n\r\n  private save(): void {\r\n    if (this.emailExist == 2) {\r\n      console.log('cannot continue');\r\n    }\r\n    else {\r\n        this.user.userName = \"[pending]\";\r\n        this.user.userPassword = \"[pending]\";\r\n        this.user.userRole = \"accountant\";\r\n        this.user.securityQ = \"[pending]\";\r\n        this.user.securityA = \"[pending]\";\r\n        this.user.active = 0;\r\n        this.userService.addUser(this.user)\r\n          .subscribe(() => {\r\n            this.logData.create(this.comp.getUserName(), 'Created user ' + this.user.firstName).subscribe();\r\n            this.submitted = true;\r\n          });\r\n      }\r\n    }\r\n  }\r\n","module.exports = \"h3, p {\\r\\n    color: white;\\r\\n}\\r\\ntd, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n#height {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n.add_user {\\r\\n  display: none;\\r\\n}\\r\\n#userTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n.modal {\\r\\n  display: none; /* Hidden by default */\\r\\n  position: fixed; /* Stay in place */\\r\\n  z-index: 1; /* Sit on top */\\r\\n  padding-top: 60px; /* Location of the box */\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  width: 100%; /* Full width */\\r\\n  height: 100%; /* Full height */\\r\\n  overflow: auto; /* Enable scroll if needed */\\r\\n  background-color: rgb(0,0,0); /* Fallback color */\\r\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n.modal-content {\\r\\n  background-color: #fefefe;\\r\\n  margin: auto;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #888;\\r\\n  width: 50%;\\r\\n}\\r\\n.modal-content2 {\\r\\n  background-color: #fefefe;\\r\\n  margin: auto;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #888;\\r\\n  width: 25%;\\r\\n}\\r\\n.rightContent{\\r\\n  width: 400px;\\r\\n  z-index: 0;\\r\\n  overflow-x: hidden;\\r\\n  float: left;\\r\\n}\\r\\n.leftContent{\\r\\n  width: 400px;\\r\\n  margin-top:86px;\\r\\n  margin-left: 450px;\\r\\n}\\r\\n.warning{\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<!-- Create user form-->\\r\\n<div id=\\\"new_user\\\" class=\\\"modal\\\">\\r\\n<div class=\\\"modal-content\\\">\\r\\n\\r\\n    <form #addUserForm=\\\"ngForm\\\" >\\r\\n      <div class=\\\"rightContent\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"userName\\\">User Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" (ngModelChange)=\\\"compareUserName($event)\\\" placeholder=\\\"User Name\\\" required [(ngModel)]=\\\"user.userName\\\"\\r\\n               name=\\\"userName\\\" >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\" (ngModelChange)=\\\"checkPassword($event)\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"user.userPassword\\\"\\r\\n               name=\\\"password\\\" >\\r\\n        <label for=\\\"password\\\" class=\\\"warning\\\">Password must be at least 8 characters long</label>\\r\\n        <label for=\\\"password\\\" class=\\\"warning\\\">Includes at least one of the following: #,$,%,&,*,+ </label>\\r\\n        <label for=\\\"password\\\" class=\\\"warning\\\">Includes at least one number</label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"firstName\\\">First Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\" required [(ngModel)]=\\\"user.firstName\\\"\\r\\n               name=\\\"firstName\\\" >\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">email</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" (ngModelChange)=\\\"compareEmail($event)\\\" placeholder=\\\"email\\\" required [(ngModel)]=\\\"user.email\\\"\\r\\n               name=\\\"email\\\" >\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"userRole\\\">Role: </label>\\r\\n          <select class=\\\"form-control\\\" required [(ngModel)]=\\\"user.userRole\\\" id=\\\"userRole\\\" name=\\\"roleType\\\" >\\r\\n            <option>accountant</option>\\r\\n            <option>manager</option>\\r\\n            <option>admin</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"securityQ\\\">Security Question: </label>\\r\\n          <select class=\\\"form-control\\\" required [(ngModel)]=\\\"user.securityQ\\\" id=\\\"securityQ\\\" name=\\\"SecurityQ\\\" >\\r\\n            <option>What is your favorite color?</option>\\r\\n            <option>Where did you go to high school?</option>\\r\\n            <option>What is your favorite movie?</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"usernameExist == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n          Username already exists\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"emailExist == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n          Email already exists\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"passwordError == 1\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n          Password is not acceptable\\r\\n        </div>\\r\\n\\r\\n        <button (click)=\\\"submit();\\\" id=\\\"submitBtn\\\" [disabled]=\\\"!addUserForm.form.valid\\\" >Submit</button>\\r\\n        <input type=\\\"reset\\\">\\r\\n        <button (click)=\\\"close(); addUserForm.reset()\\\" id=\\\"closeModalBtn\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"leftContent\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"passwordAgain\\\">Re-enter Password</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"passwordAgain\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"user.userPassword\\\"\\r\\n                 name=\\\"password2\\\" >\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" style=\\\"margin-top:112px;\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\" required [(ngModel)]=\\\"user.lastName\\\"\\r\\n                 name=\\\"lastName\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" style=\\\"margin-top:188px;\\\">\\r\\n          <label for=\\\"answer\\\">Answer</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"answer\\\" placeholder=\\\"Answer\\\" required [(ngModel)]=\\\"user.securityA\\\"\\r\\n                 name=\\\"password3\\\" >\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Update User form-->\\r\\n<div id=\\\"updateUserModal\\\" class=\\\"modal\\\">\\r\\n   <div class=\\\"modal-content\\\">\\r\\n     <form #editUserForm=\\\"ngForm\\\">\\r\\n       <div class=\\\"rightContent\\\">\\r\\n\\r\\n       <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"userNam2\\\">User Name</label>\\r\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userNam2\\\"  placeholder=\\\"username\\\" (ngModelChange)=\\\"compareUserNameUpdate($event);\\\" required [(ngModel)]=\\\"user2.userName\\\"\\r\\n                value=\\\"{{user2.userName}}\\\"  name=\\\"userName2\\\" >\\r\\n       </div>\\r\\n       <div class=\\\"form-group\\\">\\r\\n         <label for=\\\"password2\\\">Password</label>\\r\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password2\\\"  placeholder=\\\"Password\\\" (ngModelChange)=\\\"checkPasswordUpdate($event)\\\" required [(ngModel)]=\\\"user2.userPassword\\\"\\r\\n                value=\\\"{{user2.userPassword}}\\\"  name=\\\"password\\\" >\\r\\n         <label for=\\\"password\\\" class=\\\"warning\\\">Password must be at least 8 characters long</label>\\r\\n         <label for=\\\"password\\\" class=\\\"warning\\\">Includes at least one of the following: #,$,%,&,*,+ </label>\\r\\n         <label for=\\\"password\\\" class=\\\"warning\\\">Includes at least one number</label>\\r\\n       </div>\\r\\n         <div class=\\\"form-group\\\">\\r\\n           <label for=\\\"firstName2\\\">First Name</label>\\r\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName2\\\" placeholder=\\\"First Name\\\" required [(ngModel)]=\\\"user2.firstName\\\"\\r\\n                  value=\\\"{{user2.firstName}}\\\" name=\\\"firstName\\\" >\\r\\n         </div>\\r\\n\\r\\n         <div class=\\\"form-group\\\">\\r\\n           <label for=\\\"email2\\\">email</label>\\r\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email2\\\" (ngModelChange)=\\\"compareEmailUpdate($event)\\\" placeholder=\\\"email\\\" required [(ngModel)]=\\\"user2.email\\\"\\r\\n                  value=\\\"{{user2.email}}\\\"name=\\\"email\\\" >\\r\\n         </div>\\r\\n\\r\\n         <div class=\\\"form-group\\\">\\r\\n           <label for=\\\"userRole2\\\">Role: </label>\\r\\n           <select class=\\\"form-control\\\" required [(ngModel)]=\\\"user2.userRole\\\" id=\\\"userRole2\\\" value=\\\"{{user2.userRole}}\\\" name=\\\"roleType\\\" >\\r\\n             <option>accountant</option>\\r\\n             <option>manager</option>\\r\\n             <option>admin</option>\\r\\n           </select>\\r\\n         </div>\\r\\n\\r\\n         <div class=\\\"form-group\\\">\\r\\n           <label for=\\\"securityQ2\\\">Security Question: </label>\\r\\n           <select class=\\\"form-control\\\" required [(ngModel)]=\\\"user2.securityQ\\\" id=\\\"securityQ2\\\" value=\\\"{{user2.securityQ}}\\\" name=\\\"SecurityQ\\\" >\\r\\n             <option>What is your favorite color?</option>\\r\\n             <option>Where did you go to high school?</option>\\r\\n             <option>What is your favorite movie?</option>\\r\\n           </select>\\r\\n         </div>\\r\\n\\r\\n         <div class=\\\"form-group\\\">\\r\\n           <label for=\\\"securityQ2\\\">Active:</label>\\r\\n           <select class=\\\"activel\\\" required [(ngModel)]=\\\"userActive2\\\" id=\\\"active1\\\" value=\\\"{{userActive}}\\\" name=\\\"active\\\" >\\r\\n             <option>active</option>\\r\\n             <option>inactive</option>\\r\\n           </select>\\r\\n         </div>\\r\\n\\r\\n         <div *ngIf=\\\"usernameExist == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n           Username already exists\\r\\n         </div>\\r\\n\\r\\n         <div *ngIf=\\\"emailExist == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n           Email already exists\\r\\n         </div>\\r\\n\\r\\n         <div *ngIf=\\\"passwordError == 1\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n           Password is not acceptable\\r\\n         </div>\\r\\n         <button (click)=\\\"submitEdit();\\\" id=\\\"submitBtn5\\\" [disabled]=\\\"!editUserForm.form.valid\\\" >Submit</button>\\r\\n         <button (click)=\\\"resetUpdate()\\\" id=\\\"closeModalBtn3\\\">Reset</button>\\r\\n       <button (click)=\\\"close2();\\\" id=\\\"closeModalBtn2\\\">Cancel</button>\\r\\n       </div>\\r\\n\\r\\n       <div class=\\\"leftContent\\\">\\r\\n         <div class=\\\"form-group\\\">\\r\\n           <label for=\\\"passwordAgain2\\\">Re-enter Password</label>\\r\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"passwordAgain2\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"user2.userPassword\\\"\\r\\n                  value=\\\"{{user2.userPassword}}\\\" name=\\\"password2\\\" >\\r\\n         </div>\\r\\n         <div class=\\\"form-group\\\" style=\\\"margin-top:112px;\\\">\\r\\n           <label for=\\\"lastName2\\\">Last Name</label>\\r\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName2\\\" placeholder=\\\"Last Name\\\" required [(ngModel)]=\\\"user2.lastName\\\"\\r\\n                  value=\\\"{{user2.lastName}}\\\" name=\\\"lastName\\\">\\r\\n         </div>\\r\\n         <div class=\\\"form-group\\\" style=\\\"margin-top:188px;\\\">\\r\\n           <label for=\\\"answer2\\\">Answer</label>\\r\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"answer2\\\" placeholder=\\\"Answer\\\" required [(ngModel)]=\\\"user2.securityA\\\"\\r\\n                  value=\\\"{{user2.securityA}}\\\" name=\\\"password3\\\" >\\r\\n         </div>\\r\\n       </div>\\r\\n     </form>\\r\\n   </div>\\r\\n</div>\\r\\n<!--Display User details-->\\r\\n<div id=\\\"viewUserData\\\" class=\\\"modal\\\">\\r\\n  <div class=\\\"modal-content2\\\">\\r\\n    <form #viewUserData=\\\"ngForm\\\">\\r\\n        <table id=\\\"display\\\">\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">User Name:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.userName}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Password:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.userPassword}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">First name:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.firstName}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Last name:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.lastName}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">email:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.email}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Role:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.userRole}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Security Question:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.securityQ}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Security answer:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.securityA}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Password expiration:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.passwordExpire | date: 'MM/dd/yyyy  HH:mm:ss'}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Updated last:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.updatedAt | date: 'MM/dd/yyyy  HH:mm:ss'}}</th>\\r\\n          </tr>\\r\\n          <tr style=\\\" background-color: white\\\">\\r\\n            <th style=\\\"color: black; border: none\\\">Created At:</th>\\r\\n            <th style=\\\"color: black; border: none\\\">{{userDisplay.createdAt | date: 'MM/dd/yyyy  HH:mm:ss'}}</th>\\r\\n          </tr>\\r\\n\\r\\n\\r\\n        </table>\\r\\n        <button (click)=\\\"close3(); \\\" id=\\\"closeModalBtn4\\\">Close</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Display User list form-->\\r\\n<form class=\\\"form-inline\\\" style=\\\"left: 8px\\\">\\r\\n  <div style=\\\"position:  relative;left: 75%;  padding-top: 20px\\\">\\r\\n<div class=\\\"form-group\\\">\\r\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"searchBar\\\"  style=\\\"width: 300px; left: 6px\\\" placeholder=\\\"Search\\\" (ngModelChange)=\\\"viewUsersSort(column,'ASC', columnSearch, $event)\\\" required [(ngModel)]=\\\"criteria\\\"\\r\\n           name=\\\"search\\\" >\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<button class=\\\"btn btn-info btn-lg\\\" (click)=\\\"createUser()\\\" *ngIf=\\\"access == 0\\\">Create User</button>\\r\\n<div class=\\\"form-group\\\">\\r\\n\\r\\n  <table id=\\\"userTable\\\">\\r\\n    <tr>\\r\\n      <th (click)=\\\"viewUsersSort('userName','ASC',columnSearch,criteria); column='userName' \\\">User Name</th>\\r\\n      <th (click)=\\\"viewUsersSort('firstName','ASC',columnSearch,criteria); column='firstName'\\\">First Name</th>\\r\\n      <th (click)=\\\"viewUsersSort('lastName','ASC',columnSearch,criteria); column='lastName'\\\">Last Name</th>\\r\\n      <th (click)=\\\"viewUsersSort('userPassword','ASC',columnSearch,criteria); column='userPassword' \\\">Password</th>\\r\\n      <th (click)=\\\"viewUsersSort('email','ASC',columnSearch,criteria); column='email'\\\">Email</th>\\r\\n      <th (click)=\\\"viewUsersSort('userRole','ASC',columnSearch,criteria); column='userRole' \\\">User Role</th>\\r\\n      <th (click)=\\\"viewUsersSort('updatedAt','ASC',columnSearch,criteria); column='updatedAt'\\\">Updated at</th>\\r\\n      <th (click)=\\\"viewUsersSort('createdAt','ASC',columnSearch,criteria); column='createdAt'\\\">Created at</th>\\r\\n      <th (click)=\\\"viewUsersSort('active','ASC',columnSearch,criteria); column='active'\\\">Active</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let user of users\\\">\\r\\n      <td>{{ user.userName}}</td>\\r\\n      <td>{{ user.firstName }}</td>\\r\\n      <td>{{ user.lastName }}</td>\\r\\n      <td>{{ user.userPassword}}</td>\\r\\n      <td>{{ user.email }}</td>\\r\\n      <td>{{ user.userRole }}</td>\\r\\n      <td>{{ user.updatedAt | date: 'MM/dd/yyyy  HH:mm:ss'}}</td>\\r\\n      <td>{{ user.createdAt | date: 'MM/dd/yyyy  HH:mm:ss'}}</td>\\r\\n      <td *ngIf=\\\"user.active == 0\\\">inactive</td>\\r\\n      <td *ngIf=\\\"user.active == 1\\\">active</td>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"getUserInfo(user.userId)\\\"  *ngIf=\\\"access == 0\\\">Edit</button>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"viewData(user.userId)\\\">More</button>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n<!--\\r\\n<div id=\\\"editUser\\\">\\r\\n  <table>\\r\\n    <tr *ngFor=\\\"let edit of editUser\\\">\\r\\n      <td>{{ edit.userName }}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n-->\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { User } from '../user';\r\nimport { UserService } from '../services/user.service';\r\nimport { UserLogService } from '../services/user-log.service';\r\nimport { Location } from '@angular/common';\r\nimport { AppComponent } from '../app.component';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {NgForm} from '@angular/forms';\r\nimport { Observable, of,  } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css']\r\n})\r\n\r\nexport class AddUserComponent implements OnInit {\r\n  @ViewChild('addUserForm') public userForm: NgForm;\r\n  @ViewChild('editUserForm') public editForm: NgForm;\r\n\r\n  user = new User();\r\n  user2 = new User();\r\n  userDisplay = new User();\r\n  users = [];\r\n  editUser = [];\r\n  active = [];\r\n  usernameExist = 1;\r\n  emailExist = 1;\r\n  passwordAcceptable = 0;\r\n  passwordError = 0;\r\n  access = 1;\r\n  blankSpace = \" \";\r\n  //for editing users\r\n  userID: number;\r\n  userInfo2 = new User();\r\n  userActive = \"sss\";\r\n  userActive2 = \" \";\r\n\r\n  //for search and sort\r\n  column = 'userId';\r\n  columnSearch = 'all';\r\n  criteria = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private logData: UserLogService,\r\n    private comp: AppComponent,\r\n    private data: SharedDataService,\r\n    private userData: UserService,\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n    this.viewUsersSort('userId', 'ASC', 'All', null);\r\n    this.userAccess();\r\n    }\r\n\r\n  viewUsers() {\r\n    this.userData.findAll().subscribe(\r\n      (user) => {\r\n        this.users = user;\r\n      }\r\n    );\r\n  }\r\n  viewUsersSort(column: string, direction: string, columnSearch: string, criteria: string) {\r\n    this.userData.findAllSort(column, direction, columnSearch, criteria).subscribe(\r\n      (user) => {\r\n        this.users = user;\r\n        console.log(\"updated\");\r\n      }\r\n    );\r\n  }\r\n  //open create user screen\r\n  createUser() {\r\n    let modal = document.getElementById(\"new_user\");\r\n    modal.style.display = \"block\";\r\n  }\r\n\r\n\r\n\r\n  //close create user screen\r\n  close() {\r\n    let modal = document.getElementById(\"new_user\");\r\n    modal.style.display = \"none\";\r\n    this.userForm.reset();\r\n\r\n   // this.userInfo = null;\r\n  }\r\n\r\n  //close update screen\r\n  close2() {\r\n    let editModal = document.getElementById(\"updateUserModal\");\r\n    editModal.style.display = \"none\";\r\n    this.emailExist = 1;\r\n    this.usernameExist = 1;\r\n    this.passwordError = 0;\r\n    this.passwordAcceptable = 1;\r\n    this.resetUpdate();\r\n  }\r\n  close3() {\r\n    let modal = document.getElementById(\"viewUserData\");\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n\r\n  //check if the Username already exists on create screen\r\n  compareUserName(event){\r\n    this.user.userName = event;\r\n    this.userData.compareUsername(this.user.userName).subscribe( response => {\r\n      console.log(\"button changed\");\r\n      this.usernameExist = response;\r\n      console.log(this.usernameExist);\r\n    });\r\n  }\r\n\r\n   //check if the Username already exists on update screen\r\n  async compareUserNameUpdate(event){\r\n    this.user2.userName = event;\r\n    await this.getOriginalUserID(this.user2.userId);\r\n      if(this.user2.userName == this.userInfo2.userName){\r\n        this.usernameExist = 1;\r\n        console.log(\"worked\");\r\n      }\r\n      else {\r\n        this.userData.compareUsername(this.user2.userName).subscribe(response => {\r\n          console.log(\"button changed\");\r\n          this.usernameExist = response;\r\n          console.log(this.usernameExist);\r\n        });\r\n      }\r\n  }\r\n\r\n//check if the Email already exists on create screen\r\n  compareEmail(event){\r\n    this.user.email = event;\r\n    this.userData.compareEmail(this.user.email).subscribe( response => {\r\n      this.emailExist = response;\r\n      console.log(this.emailExist);\r\n    });\r\n  }\r\n//check if the Email already exists on update screen\r\n  async compareEmailUpdate(event){\r\n    this.user2.email = event;\r\n    await this.getOriginalUserID(this.user2.userId);\r\n    if(this.user2.email == this.userInfo2.email){\r\n      this.emailExist = 1;\r\n    }\r\n    else {\r\n      this.userData.compareEmail(this.user2.email).subscribe(response => {\r\n        this.emailExist = response;\r\n        console.log(this.userInfo2.email);\r\n        console.log(response);\r\n      });\r\n    }\r\n  }\r\n\r\n  //submit new user\r\n  submit(): void {\r\n    if(this.passwordAcceptable != 1){\r\n      this.passwordError = 1;\r\n    } else if (this.usernameExist !== 1 || this.emailExist !==1 ){\r\n      console.log(\"cannot continue\");\r\n    } else {\r\n      this.user.lastUpdatePassword = new Date();\r\n      this.user.passwordExpire = new Date();\r\n      this.user.passwordExpire.setDate(this.user.lastUpdatePassword.getDate() + 28)\r\n      this.userData.addUser(this.user)\r\n        .subscribe(() => {\r\n          this.viewUsersSort(this.column,'ASC', this.columnSearch, this.criteria);\r\n          this.close();\r\n          this.userForm.reset();\r\n\r\n\r\n        });\r\n    }\r\n  }\r\n//submit an edit\r\n  async submitEdit(){\r\n    //conditions for input data\r\n    if (this.passwordAcceptable !== 1){\r\n      console.log(\"no1\");\r\n      this.passwordError = 1;\r\n    } else if (this.usernameExist !== 1 || this.emailExist !==1 ){\r\n        console.log(\"no\");\r\n    }\r\n    else {\r\n     await this.getOriginalUserID(this.user2.userId);\r\n      //if password is reset, expire date is reset\r\n      console.log('Hello');\r\n      if (this.user2.userPassword !== this.userInfo2.userPassword) {\r\n        this.user2.lastUpdatePassword = new Date();\r\n        this.user2.passwordExpire = new Date();\r\n        this.user2.passwordExpire.setDate(this.user2.lastUpdatePassword.getDate() + 28);\r\n        console.log('password expiration has been reset');\r\n      }\r\n      if (this.userActive2 === \"active\"){\r\n        this.user2.active = 1;\r\n      }\r\n      else{\r\n        this.user2.active = 0;\r\n      }\r\n      this.user2.userId = this.userInfo2.userId;\r\n      this.userData.updateUser(this.user2)\r\n        .subscribe(() => {\r\n          this.viewUsersSort(this.column,'ASC', this.columnSearch, this.criteria);\r\n          this.close2();\r\n          this.passwordError = 0;\r\n          this.passwordAcceptable = 1;\r\n        });\r\n    }\r\n  }\r\n//check if password is appropriate\r\n  checkPassword(event){\r\n    this.user.userPassword = event;\r\n    try {\r\n      let length = this.user.userPassword.length;\r\n      let result = this.user.userPassword.match(/[0-9]+/g);\r\n      let result2 = this.user.userPassword.match(/[%, #, $, *, &,+]+/g);\r\n      console.log(result);\r\n      if (this.user.userPassword.length >= 8 && result != null && result2 != null) {\r\n        console.log('password is good');\r\n        this.passwordAcceptable = 1;\r\n        this.passwordError = 0;\r\n\r\n      }\r\n      else {\r\n        console.log('password is weak');\r\n        console.log(length);\r\n        this.passwordAcceptable = 0;\r\n        this.passwordError = 0;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n//check if password is appropriate for update\r\n  checkPasswordUpdate(event){\r\n    this.user2.userPassword = event;\r\n    try {\r\n      let length = this.user2.userPassword.length;\r\n      let result = this.user2.userPassword.match(/[0-9]+/g);\r\n      let result2 = this.user2.userPassword.match(/[%, #, $, *, &,+]+/g);\r\n      console.log(result);\r\n\r\n        if (this.user2.userPassword.length >= 8 && result != null && result2 != null) {\r\n          console.log('password is good');\r\n          this.passwordAcceptable = 1;\r\n          this.passwordError = 0;\r\n\r\n        }\r\n        else {\r\n          console.log('password is weak');\r\n          console.log(length);\r\n          this.passwordAcceptable = 0;\r\n          this.passwordError = 0;\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.log(err);\r\n      }\r\n  }\r\n\r\n\r\n  getUser(id: string) {\r\n    // let id = document.getElementById(\"userId\").;\r\n    let userId = +id;\r\n    this.userData.getUser(userId).subscribe(\r\n      (getEditUser) => {\r\n        this.editUser = getEditUser;\r\n        document.getElementById(\"editUser\").hidden = false; //Unhide table after onLog click\r\n        document.getElementById(\"showUsersTable\").hidden = true;\r\n        this.router.navigate(['user/' + userId]);\r\n      }\r\n    );\r\n  }\r\n\r\n  //type of user using the page\r\n  userAccess(){\r\n    if(this.comp.getRole() === 'admin') {\r\n      this.access = 0;\r\n    }\r\n    else {\r\n      this.access = 1;\r\n    }\r\n  }\r\n\r\n  //reset update page\r\n  resetUpdate() {\r\n    this.userData.getUser(this.user2.userId)\r\n      .subscribe(user => {\r\n          this.user2 = user;\r\n          this.userInfo2 = user;\r\n\r\n\r\n          console.log(this.userInfo2.userName);\r\n          console.log(this.user2.userName);\r\n\r\n          if(this.user2.active == 0){\r\n            this.userActive = \"inactive\";\r\n          }\r\n          else{\r\n            this.userActive = \"active\";\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  //retreive the id of the update user unchanged\r\n  //fixed asyncronous calls\r\n async getOriginalUserID(id: number) {\r\n    this.userID = id;\r\n    let response = await this.userData.getUser(this.userID)\r\n      .toPromise();\r\n       this.userInfo2 = response;\r\n       console.log('userworked');\r\n       console.log(this.userInfo2.userName);\r\n  }\r\n\r\n  viewData(id: number) {\r\n    this.userID = id;\r\n    this.userData.getUser(this.userID)\r\n      .subscribe(user => {\r\n        this.userDisplay = user;\r\n        let modal = document.getElementById(\"viewUserData\");\r\n        modal.style.display = 'block';\r\n      });\r\n  }\r\n  //Get account info to edit and load modal\r\n  getUserInfo(id: number) {\r\n    this.userID = id;\r\n     this.userData.getUser(this.userID)\r\n      .subscribe(user => {\r\n        this.user2 = user;\r\n        this.userInfo2 = user;\r\n        this.passwordError = 0;\r\n        this.passwordAcceptable = 1;\r\n\r\n        console.log(this.userInfo2.userName);\r\n        console.log(this.user2.userName);\r\n\r\n        if(this.user2.active == 0){\r\n          this.userActive = \"inactive\";\r\n        }\r\n        else{\r\n          this.userActive = \"active\";\r\n        }\r\n        let modal = document.getElementById('updateUserModal');\r\n        modal.style.display = 'block';\r\n      }\r\n      );\r\n\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { UserPageComponent } from '../user-page/user-page.component';\r\nimport { AddUserComponent } from '../add-user/add-user.component';\r\nimport { LoginHomeComponent } from '../login-home/login-home.component';\r\nimport { ChartOfAccountsComponent } from '../chart-of-accounts/chart-of-accounts.component';\r\nimport { HomeScreenComponent } from '../home-screen/home-screen.component';\r\nimport { UserLogComponent } from '../user-log/user-log.component';\r\nimport { JournalizeComponent } from '../journalize/journalize.component';\r\nimport { GeneralLedgerComponent } from '../general-ledger/general-ledger.component';\r\nimport { IndividualLedgerComponent } from '../individual-ledger/individual-ledger.component';\r\nimport { TrialBalanceComponent } from '../trial-balance/trial-balance.component';\r\nimport { IndividualJournalComponent } from '../individual-journal/individual-journal.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/loginHome',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'loginHome',\r\n    component: LoginHomeComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'UserPage',\r\n    component: UserPageComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'home',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'home',\r\n        component: HomeScreenComponent\r\n      },\r\n      {\r\n        path: 'userList',\r\n        component: AddUserComponent\r\n      },\r\n      {\r\n        path: 'chartOfAccounts',\r\n        component: ChartOfAccountsComponent\r\n      },\r\n      {\r\n        path: 'userLogs',\r\n        component: UserLogComponent\r\n      },\r\n      {\r\n        path: 'journal',\r\n        component: JournalizeComponent\r\n      },\r\n      {\r\n        path: 'generalLedger',\r\n        component: GeneralLedgerComponent\r\n      },\r\n      {\r\n        path: 'ledger',\r\n        component: IndividualLedgerComponent\r\n      },\r\n      {\r\n        path: 'ledger/:term',\r\n        component: IndividualLedgerComponent\r\n      },\r\n      {\r\n        path: 'journal_info',\r\n        component: IndividualJournalComponent\r\n      },\r\n      {\r\n        path: 'journal_info/:term',\r\n        component: IndividualJournalComponent\r\n      },\r\n      {\r\n        path: 'trial-balance',\r\n        component: TrialBalanceComponent\r\n      }\r\n      ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const routingComponents = [\r\n  LoginHomeComponent,\r\n  UserPageComponent,\r\n  ChartOfAccountsComponent,\r\n  AddUserComponent,\r\n  HomeScreenComponent,\r\n  UserLogComponent\r\n];\r\n","module.exports = \"div.topbar{\\r\\n  width: 17%;\\r\\n  margin: 0 auto;\\r\\n\\r\\n}\\r\\ndiv.center{\\r\\n  position: relative;\\r\\n  top: 50%;\\r\\n  -webkit-transform: perspective(1px) translateY(-70%);\\r\\n          transform: perspective(1px) translateY(-70%);\\r\\n}\\r\\ndiv.image{\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\r\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\r\nimport {SharedDataService} from './services/shared-data.service';\r\n\r\n@Component({\r\n\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Welcome to Sarif Financial';\r\n  access = 1;\r\n\r\n  indicator = '';\r\n  constructor(private _cookieService: CookieService,\r\n              private localSt: LocalStorageService,\r\n              private sessionSt: SessionStorageService,\r\n              private data: SharedDataService\r\n  ) {}\r\n\r\nsetCookies(){\r\n    this._cookieService.put('test', 'testing cookie');\r\n}\r\ngetCookie(){\r\n    alert(this._cookieService.get('test'));\r\n}\r\ndelCookies(){\r\n    this._cookieService.remove('test');\r\n}\r\n\r\nsetSession(id, userName, userRole, firstName, lastName) {\r\n    this.sessionSt.store('userName', userName);\r\n    this.sessionSt.store('id', id);\r\n    this.sessionSt.store('userRole', userRole);\r\n    this.sessionSt.store('firstName', firstName);\r\n    this.sessionSt.store('lastName', lastName);\r\n}\r\ngetSession(){\r\n    alert(this.sessionSt.retrieve('logged-in'));\r\n}\r\ngetUserName(){\r\n    return this.sessionSt.retrieve('userName');\r\n}\r\n  getRole(){\r\n    return this.sessionSt.retrieve('userRole');\r\n  }\r\n\r\n  getFirstName(){\r\n    return this.sessionSt.retrieve('firstName');\r\n  }\r\ndelSession(){\r\n    this.sessionSt.clear('userName');\r\n    this.sessionSt.clear('id');\r\n    this.sessionSt.clear('userRole');\r\n}\r\n\r\n\r\nfindAccount(found) {\r\n    this.sessionSt.store('accountName', found);\r\n}\r\ngetAccount() {\r\n    return this.sessionSt.retrieve('accountName');\r\n}\r\ndelAccount() {\r\n    this.sessionSt.clear('accountName');\r\n}\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule, routingComponents } from './app-routing/app-routing.module';\r\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\r\nimport { Ng2Webstorage } from 'ngx-webstorage';\r\nimport { MyDatePickerModule } from 'mydatepicker';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserPageComponent } from './user-page/user-page.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { LoginHomeComponent } from './login-home/login-home.component';\r\nimport { ChartOfAccountsComponent } from './chart-of-accounts/chart-of-accounts.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { UserLogComponent } from './user-log/user-log.component';\r\nimport { AddUserLoginComponent } from './add-user-login/add-user-login.component';\r\nimport { HomeScreenComponent } from './home-screen/home-screen.component';\r\nimport { JournalizeComponent } from './journalize/journalize.component';\r\nimport { GeneralLedgerComponent } from './general-ledger/general-ledger.component';\r\nimport { IndividualLedgerComponent } from './individual-ledger/individual-ledger.component';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { TrialBalanceComponent } from './trial-balance/trial-balance.component';\r\nimport { IndividualJournalComponent } from './individual-journal/individual-journal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    LoginComponent,\r\n    UserPageComponent,\r\n    AddUserComponent,\r\n    LoginHomeComponent,\r\n    ChartOfAccountsComponent,\r\n    ResetPasswordComponent,\r\n    UserLogComponent,\r\n    AddUserLoginComponent,\r\n    HomeScreenComponent,\r\n    JournalizeComponent,\r\n    GeneralLedgerComponent,\r\n    IndividualLedgerComponent,\r\n    TrialBalanceComponent,\r\n    IndividualJournalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    Ng2Webstorage,\r\n    HttpClientModule,\r\n    MyDatePickerModule,\r\n    TextMaskModule\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class CoA {\r\n    caId: number;\r\n    accountType: string;\r\n    accountSubType: string;\r\n    reportType: string;\r\n    accountNumber: number;\r\n    normalSide: string;\r\n    originalBalance: number;\r\n    currentBalance: number;\r\n    active: string;\r\n    comment: string;\r\n    accountName: string;\r\n    createdBy: string;\r\n  }\r\n  \r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\n\\r\\ntable, h3, h2, td {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#accountTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#center {\\r\\n    position: relative;\\r\\n    width: 14%;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n\\r\\n#height {\\r\\n    margin-top:30px;\\r\\n    width: 250px\\r\\n  }\\r\\n\\r\\n.modal {\\r\\n    display: none; /* Hidden by default */\\r\\n    position: fixed; /* Stay in place */\\r\\n    z-index: 1; /* Sit on top */\\r\\n    padding-top: 100px; /* Location of the box */\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%; /* Full width */\\r\\n    height: 100%; /* Full height */\\r\\n    overflow: auto; /* Enable scroll if needed */\\r\\n    background-color: rgb(0,0,0); /* Fallback color */\\r\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n    background-color: #fefefe;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #888;\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n/* The switch - the box around the slider */\\r\\n\\r\\n.switch {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 60px;\\r\\n    height: 34px;\\r\\n  }\\r\\n\\r\\n/* Hide default HTML checkbox */\\r\\n\\r\\n.switch input {display:none;}\\r\\n\\r\\n/* The slider */\\r\\n\\r\\n.slider {\\r\\n  position: absolute;\\r\\n  cursor: pointer;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background-color: #ccc;\\r\\n  transition: .4s;\\r\\n}\\r\\n\\r\\n.slider:before {\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  height: 26px;\\r\\n  width: 26px;\\r\\n  left: 4px;\\r\\n  bottom: 4px;\\r\\n  background-color: white;\\r\\n  transition: .4s;\\r\\n}\\r\\n\\r\\ninput:checked + .slider {\\r\\n  background-color: #2196F3;\\r\\n}\\r\\n\\r\\ninput:focus + .slider {\\r\\n  box-shadow: 0 0 1px #2196F3;\\r\\n}\\r\\n\\r\\ninput:checked + .slider:before {\\r\\n  -webkit-transform: translateX(26px);\\r\\n  transform: translateX(26px);\\r\\n}\\r\\n\\r\\n/* Rounded sliders */\\r\\n\\r\\n.slider.round {\\r\\n  border-radius: 34px;\\r\\n}\\r\\n\\r\\n.slider.round:before {\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.createHeader {\\r\\n  text-align: center;\\r\\n}\"","module.exports = \"\\r\\n<div id=\\\"createAccountModal\\\" class=\\\"modal\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <form #addAccountForm=\\\"ngForm\\\">\\r\\n\\r\\n      <!-- Modal for account creation -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountName\\\">Account Name</label><br>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountName\\\" style=\\\"text-transform: capitalize\\\"\\r\\n                placeholder=\\\"Account Name\\\" required [(ngModel)]=\\\"CoA.accountName\\\"\\r\\n          name=\\\"accountName\\\" #accountNam=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div [hidden]=\\\"accountNam.valid || accountNam.pristine\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Account Name is required\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountNumber\\\">Account Number</label><br>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountNumber\\\" placeholder=\\\"Account Number\\\" required [(ngModel)]=\\\"CoA.accountNumber\\\"\\r\\n          name=\\\"accountNumber\\\" #accountNumbe=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div [hidden]=\\\"accountNumbe.valid || accountNumbe.pristine\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Account Number is required\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isNegativeNumber(CoA.accountNumber)\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Account Number must be greater than 0\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountType\\\">Account Type</label><br>\\r\\n        <select required [(ngModel)]=\\\"CoA.accountType\\\" name=\\\"accountType\\\" #accountType=\\\"ngModel\\\" >\\r\\n          <option>Assets</option>\\r\\n          <option>Revenue</option>\\r\\n          <option>Expenses</option>\\r\\n          <option>Liability</option>\\r\\n          <option>Equity</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountSubType\\\">Account Subtype</label><br>\\r\\n        <select required [(ngModel)]=\\\"CoA.accountSubType\\\" name=\\\"accountSubType\\\" #accountSubType=\\\"ngModel\\\">\\r\\n          <option>Current Assets</option>\\r\\n          <option>Property, Plant, and Equipment</option>\\r\\n          <option>Current Liabilities</option>\\r\\n          <option>Long-term Liabilities</option>\\r\\n          <option>Stocholders' Equity</option>\\r\\n          <option>Operating Revenues</option>\\r\\n          <option>Cost of Goods Sold</option>\\r\\n          <option>Other</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"originalBalance\\\">Original Balance</label><br>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"originalBalance\\\" [textMask]=\\\"{mask: currencyMask}\\\" placeholder=\\\"Account Balance\\\" required [(ngModel)]=\\\"CoA.originalBalance\\\"\\r\\n          name=\\\"originalBalance\\\" #balance=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div [hidden]=\\\"balance.valid || balance.pristine\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Account Balance is required\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"active\\\">Active</label>\\r\\n        <select required [(ngModel)]=\\\"CoA.active\\\" name=\\\"active\\\" #activeInactive=\\\"ngModel\\\">\\r\\n          <option>Active</option>\\r\\n          <option>Inactive</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"comment\\\">Comments</label><br>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" placeholder=\\\"Account Description\\\" required [(ngModel)]=\\\"CoA.comment\\\"\\r\\n          name=\\\"comment\\\" #description=\\\"ngModel\\\" required>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"description.valid || description.pristine\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Account Description is required\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"numberHasDecimal==2\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Balance must be in decimal format\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <button (click)=\\\"submit()\\\" id=\\\"submitBtn\\\" [disabled]=\\\"!addAccountForm.form.valid\\\">Submit</button>\\r\\n      <input type=\\\"reset\\\">\\r\\n      <button (click)=\\\"close()\\\" id=\\\"closeModalBtn4\\\">Cancel</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal for account update -->\\r\\n<div id=\\\"editAccountModal\\\" class=\\\"modal\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <form #editAccountForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountName\\\">Account Name</label><br>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountName\\\" style=\\\"text-transform: capitalize\\\"\\r\\n               (ngModelChange)=\\\"compareAccountNameUpdate($event)\\\" value=\\\"{{ accountData.accountName}}\\\" required [(ngModel)]=\\\"editCoA.accountName\\\"\\r\\n          name=\\\"accountName\\\" #accountName=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountNumber\\\">Account Number</label><br>\\r\\n        <input type=\\\"text\\\" [textMask]=\\\"{mask: currencyMask}\\\" class=\\\"form-control\\\" id=\\\"accountNumber\\\"\\r\\n               (ngModelChange)=\\\"compareAccountNumberUpdate($event)\\\" value=\\\"{{ accountData.accountNumber }}\\\" required\\r\\n          [(ngModel)]=\\\"editCoA.accountNumber\\\" name=\\\"accountNumber\\\" #accountNumber=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isNegativeNumber(editCoA.accountNumber)\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Account Number must be greater than 0\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountType\\\">Account Type: {{ accountData.accountType}}</label><br>\\r\\n        <select required [(ngModel)]=\\\"editCoA.accountType\\\" name=\\\"accountType\\\" #accountType=\\\"ngModel\\\">\\r\\n          <option>Assets</option>\\r\\n          <option>Revenue</option>\\r\\n          <option>Expenses</option>\\r\\n          <option>Liability</option>\\r\\n          <option>Equity</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"accountSubType\\\">Account Subtype: {{ accountData.accountSubType}}</label><br>\\r\\n        <select required [(ngModel)]=\\\"editCoA.accountSubType\\\" value=\\\"{{accountData.accountSubType}}\\\" name=\\\"accountSubType\\\" #accountSubType=\\\"ngModel\\\">\\r\\n          <option>Current Assets</option>\\r\\n          <option>Property, Plant, and Equipment</option>\\r\\n          <option>Current Liabilities</option>\\r\\n          <option>Long-term Liabilities</option>\\r\\n          <option>Stocholders' Equity</option>\\r\\n          <option>Operating Revenues</option>\\r\\n          <option>Cost of Goods Sold</option>\\r\\n          <option>Other</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"originalBalance\\\">Original Balance</label><br>\\r\\n        <input type=\\\"text\\\" [textMask]=\\\"{mask: currencyMask}\\\" class=\\\"form-control\\\" id=\\\"originalBalance\\\"  value=\\\"{{ accountData.originalBalance }}\\\" required\\r\\n          [(ngModel)]=\\\"editCoA.originalBalance\\\" name=\\\"originalBalance\\\" #originalBalance=\\\"ngModel\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"active\\\">Active: {{ accountData.active}}</label><br>\\r\\n        <select required [(ngModel)]=\\\"editCoA.active\\\" name=\\\"active\\\" #active=\\\"ngModel\\\">\\r\\n          <option>Active</option>\\r\\n          <option>Inactive</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"comment\\\">Comments</label><br>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" value=\\\"{{ accountData.comment }}\\\" required [(ngModel)]=\\\"editCoA.comment\\\"\\r\\n          name=\\\"comment\\\" #comment=\\\"ngModel\\\">\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"accountNameExist== 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n        Account Name exists\\r\\n      </div>\\r\\n      <div *ngIf=\\\"accountNumberExist == 3\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n        Account Number input must be an integer\\r\\n      </div>\\r\\n      <div *ngIf=\\\"accountNumberExist == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n        Account Number exists\\r\\n      </div>\\r\\n      <div *ngIf=\\\"numberHasDecimal==2\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Balance must be in decimal format\\r\\n      </div>\\r\\n\\r\\n      <button (click)=\\\"submitEdit()\\\" id=\\\"submitEditBtn\\\">Submit</button>\\r\\n      <button (click)=\\\"resetUpdate()\\\" id=\\\"closeModalBtn3\\\">Reset</button>\\r\\n      <button (click)=\\\"close2()\\\" id=\\\"closeModalBtn\\\">Cancel</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--search bar -->\\r\\n<form class=\\\"form-inline\\\" style=\\\"left: 8px\\\">\\r\\n  <div style=\\\"position:  relative;left: 75%;  padding-top: 20px\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"searchBar\\\"  style=\\\"width: 300px; left: 6px\\\" placeholder=\\\"Search\\\" (ngModelChange)=\\\"viewAccountsSort(column,'ASC', columnSearch, $event)\\\" required [(ngModel)]=\\\"criteria\\\"\\r\\n             name=\\\"search\\\" >\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<button class=\\\"btn btn-info btn-lg\\\" (click)=\\\"createAccount()\\\" id='createAccountBtn' *ngIf=\\\"access == 1\\\">Create Account</button>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <table id=\\\"accountTable\\\">\\r\\n    <tr>\\r\\n      <th (click)=\\\"viewAccountsSort('accountNumber','ASC',columnSearch,criteria)\\\">Account Number</th>\\r\\n      <th (click)=\\\"viewAccountsSort('accountName','ASC',columnSearch,criteria)\\\">Account Name</th>\\r\\n      <th (click)=\\\"viewAccountsSort('accountType','ASC',columnSearch,criteria)\\\">Account Type</th>\\r\\n      <th (click)=\\\"viewAccountsSort('accountSubType','ASC',columnSearch,criteria)\\\">Account Subtype</th>\\r\\n      <th (click)=\\\"viewAccountsSort('normalSide','ASC',columnSearch,criteria)\\\">Normal Side</th>\\r\\n      <th (click)=\\\"viewAccountsSort('originalBalance','ASC',columnSearch,criteria)\\\">Original Balance</th>\\r\\n      <th (click)=\\\"viewAccountsSort('currentBalance','ASC',columnSearch,criteria)\\\">Current Balance</th>\\r\\n      <th (click)=\\\"viewAccountsSort('comment','ASC',columnSearch,criteria)\\\">Account Description</th>\\r\\n      <th (click)=\\\"viewAccountsSort('active','ASC',columnSearch,criteria)\\\">Active</th>\\r\\n      <th (click)=\\\"viewAccountsSort('createdBy','ASC',columnSearch,criteria)\\\">Created By</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let account of accounts\\\">\\r\\n      <td>{{ account.accountNumber }}</td>\\r\\n      <td>{{ account.accountName }}</td>\\r\\n      <td>{{ account.accountType }}</td>\\r\\n      <td>{{ account.accountSubType }}</td>\\r\\n      <td>{{ account.normalSide }}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{ account.originalBalance | number : '1.2-2'}}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{ account.currentBalance | number : '1.2-2'}}</td>\\r\\n      <td>{{ account.comment }}</td>\\r\\n      <td>{{ account.active }}</td>\\r\\n      <td>{{ account.createdBy }}</td>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"getAccount(account.caId)\\\" *ngIf=\\\"access == 1\\\">Edit</button>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CoA } from '../chart-of-accounts';\r\nimport { AppComponent } from '../app.component';\r\nimport { CoAService } from '../services/coa.service';\r\nimport { UserLogService } from '../services/user-log.service';\r\nimport {NgForm} from '@angular/forms';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\r\n\r\n@Component({\r\n  selector: 'app-chart-of-accounts',\r\n  templateUrl: './chart-of-accounts.component.html',\r\n  styleUrls: ['./chart-of-accounts.component.css']\r\n})\r\nexport class ChartOfAccountsComponent implements OnInit {\r\n  @ViewChild('addAccountForm') public accountForm: NgForm;\r\n  @ViewChild('editAccountForm') public editForm: NgForm;\r\n  CoA = new CoA();\r\n  editCoA = new CoA();\r\n  accounts = [];\r\n  accountData = new CoA();\r\n  accountId: number;\r\n  temp = [];\r\n//input data for search and sort\r\n  column = 'caId';  //sort column\r\n  columnSearch = 'all'; //column that will be searched\r\n  criteria = ''; //search query\r\n\r\n  accountCheck = new CoA();\r\n\r\n  //variables to indicate conditions are met\r\n  accountNameExist = 1;\r\n  accountNumberExist = 1;\r\n  numberHasDecimal = 1;\r\n\r\n  //set user access\r\n  access = 0;\r\n\r\n//currencyMask\r\n/////EDITED 10/31 BECAUSE THE MASK WAS TOO SPOOKY\r\n  public currencyMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: '',\r\n    includeThousandsSeparator: false,\r\n    //thousandsSeparatorSymbol: ',',\r\n    allowDecimal: true,\r\n    decimalSymbol: '.',\r\n    decimalLimit: 2,\r\n    integerLimit: null,\r\n    requireDecimal: false,\r\n    precision: 2,\r\n    allowNegative: false,\r\n    allowLeadingZeroes: false\r\n  });\r\n\r\n\r\n  constructor(\r\n    private coaService: CoAService,\r\n    private logData: UserLogService,\r\n    private comp: AppComponent,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.onOpened();\r\n    this.viewAccountsSort('caId','ASC', 'All', null);\r\n    //this.viewAccounts();\r\n\r\n\r\n    //Closes modal when user clicks outside of modal\r\n    window.onclick = function (event) {\r\n      let createAccountModal = document.getElementById(\"createAccountModal\");\r\n      if (event.target == createAccountModal) {\r\n        createAccountModal.style.display = \"none\";\r\n      }\r\n      let editAccountModal = document.getElementById(\"editAccountModal\");\r\n      if (event.target == editAccountModal) {\r\n        editAccountModal.style.display = \"none\";\r\n      }\r\n    };\r\n  }\r\n  viewAccounts() {\r\n    this.coaService.findAll().subscribe(\r\n      (account) => {\r\n        this.accounts = account;\r\n      });\r\n  }\r\n  viewAccountsSort(column: string, direction: string, columnSearch: string, criteria: string) {\r\n    this.coaService.findAllSort(column, direction, columnSearch, criteria).subscribe(\r\n      (account) => {\r\n        this.accounts = account;\r\n      });\r\n  }\r\n\r\n  //sets user access\r\n  onOpened() {\r\n    if(this.comp.getRole() === 'admin'){\r\n      this.access = 1;\r\n    }\r\n    else if(this.comp.getRole() === 'manager') {\r\n      this.access = 2;\r\n    }\r\n    else{\r\n      this.access = 3;\r\n    }\r\n  }\r\n\r\n  //Opens modal\r\n  createAccount() {\r\n    this.numberHasDecimal = 1;\r\n    let modal = document.getElementById(\"createAccountModal\");\r\n    modal.style.display = \"block\";\r\n  }\r\n\r\n  submit() {\r\n    this.CoA.createdBy = this.comp.getUserName();\r\n    //Check to see if account number is a number\r\n    if (isNaN(this.CoA.accountNumber)) {\r\n      return window.alert(\"Enter a number for account number\");\r\n    }\r\n    ;\r\n    //Check to see if account balance is a number\r\n    if (isNaN(this.CoA.originalBalance)) {\r\n      return window.alert(\"Enter a number for the balance\");\r\n    }\r\n    ;\r\n    //Set asset and revenue account types to normal side debit\r\n    if (this.CoA.accountType == \"Assets\" || this.CoA.accountType == \"Expenses\") {\r\n      this.CoA.normalSide = \"Debit\";\r\n    }\r\n    else {\r\n      this.CoA.normalSide = \"Credit\";\r\n    }\r\n    //current balance may be set to 0 but this is not confirmed\r\n    //Set the current balance to 0\r\n    this.CoA.currentBalance = 0;\r\n\r\n    this.editCoA = this.CoA;\r\n\r\n    //Check to see if another account exists with same number or name\r\n    if (this.numberHasDecimal == 2) {\r\n      console.log('cannot continue');\r\n    }\r\n    else {\r\n      this.coaService.findAll().subscribe(\r\n        (account) => {\r\n          this.temp = account;\r\n          for (var i = 0; i < this.temp.length; i++) {\r\n            //Check for account name\r\n            if (this.temp[i].accountName == this.CoA.accountName) {\r\n              return window.alert(\"Account with same account name found. Enter different account name.\");\r\n            }\r\n            //Check for account number\r\n            if (this.temp[i].accountNumber == this.CoA.accountNumber) {\r\n              return window.alert(\"Account with the same account number found. Enter a different account number.\")\r\n            }\r\n          }\r\n          //If account name and number not found, create the account\r\n          this.CoA.accountName = this.CoA.accountName.charAt(0).toLocaleUpperCase() + this.CoA.accountName.substr(1);\r\n          this.coaService.addAccount(this.CoA)\r\n            .subscribe(() => {\r\n              this.logData.create(this.comp.getUserName(), this.CoA.createdBy + 'created account ' + this.CoA.accountName).subscribe();\r\n              //Close modal\r\n              let modal = document.getElementById(\"createAccountModal\");\r\n              modal.style.display = \"none\";\r\n              this.accountForm.reset();\r\n              this.viewAccountsSort(this.column, 'ASC', this.columnSearch, this.criteria);\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  //Closes modal after clicking on cancel in modal\r\n  close() {\r\n    let modal = document.getElementById(\"createAccountModal\");\r\n    modal.style.display = \"none\";\r\n    this.accountForm.reset();\r\n\r\n  }\r\n  close2(){\r\n    let editModal = document.getElementById(\"editAccountModal\");\r\n    editModal.style.display = \"none\";\r\n    this.editForm.reset();\r\n  }\r\n\r\n\r\n  //Get account info to edit and load modal\r\n  getAccount(id: number) {\r\n    this.numberHasDecimal = 1;\r\n    this.accountId = +id;\r\n    this.coaService.getAccount(this.accountId)\r\n      .subscribe((account) => {\r\n        this.accountData = account;\r\n        this.editCoA = account;\r\n      });\r\n    let modal = document.getElementById(\"editAccountModal\");\r\n    modal.style.display = \"block\";\r\n  }\r\n\r\n  submitEdit() {\r\n    if ((this.editCoA.accountNumber != null) && isNaN(this.editCoA.accountNumber)) {\r\n      return window.alert(\"Enter a number for account number\");\r\n    };\r\n    if ((this.editCoA.originalBalance != null) && isNaN(this.editCoA.originalBalance)) {\r\n      return window.alert(\"Enter a number for the balance\");\r\n    }\r\n\r\n    //Set the account Id correctly to chosen account\r\n    this.editCoA.caId = this.accountId;\r\n\r\n    //Set asset and revenue account types to normal side debit\r\n    if (this.editCoA.accountType == \"Assets\" || this.editCoA.accountType == \"Revenue\") {\r\n      this.editCoA.normalSide = \"Debit\";\r\n    }\r\n    else {\r\n      this.editCoA.normalSide = \"Credit\";\r\n    }\r\n    //Reset current balance to new orignal balance\r\n    this.editCoA.currentBalance = this.editCoA.originalBalance;\r\n\r\n    //Check to see if another account exists with same number or name\r\n    //If account name and number not found, create the account\r\n\r\n    if(this.numberHasDecimal == 2) {\r\n      console.log('decimal required');\r\n    }\r\n    else {\r\n      this.editCoA.accountName = this.editCoA.accountName.charAt(0).toLocaleUpperCase() + this.editCoA.accountName.substr(1);\r\n      console.log('edit made');\r\n      this.coaService.updateAccount(this.editCoA)\r\n        .subscribe(() => {\r\n          this.logData.create(this.comp.getUserName(), 'Updated account ' + this.editCoA.accountName).subscribe();\r\n          let modal = document.getElementById(\"editAccountModal\");\r\n          modal.style.display = \"none\";\r\n          this.viewAccountsSort(this.column, 'ASC', this.columnSearch, this.criteria);\r\n        });\r\n    }\r\n  }\r\n\r\n  async compareAccountNameUpdate(event){\r\n    this.editCoA.accountName = event;\r\n    await this.getOriginalAccountID(this.editCoA.caId);\r\n    if(this.editCoA.accountName == this.accountCheck.accountName){\r\n      this.accountNameExist = 1;\r\n      console.log(\"worked\");\r\n    }\r\n    else {\r\n      this.coaService.compareAccountName(this.editCoA.accountName).subscribe(response => {\r\n        console.log(\"button changed\");\r\n        this.accountNameExist = response;\r\n        console.log(this.accountNameExist);\r\n      });\r\n    }\r\n  }\r\n\r\n  async compareAccountNumberUpdate(event){\r\n    if(isNaN(event) || event == \"\") {\r\n      console.log(\"not a number\");\r\n      this.accountNumberExist = 3;\r\n    }else {\r\n      this.editCoA.accountNumber = event;\r\n      await this.getOriginalAccountID(this.editCoA.caId);\r\n      if (this.editCoA.accountNumber == this.accountCheck.accountNumber) {\r\n        this.accountNumberExist = 1;\r\n        console.log(\"worked\");\r\n      }\r\n      else {\r\n        this.coaService.compareAccountNumber(this.editCoA.accountNumber).subscribe(response => {\r\n          console.log(\"button changed\");\r\n          this.accountNumberExist = response;\r\n          console.log(this.accountNumberExist);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  //gets original account info to compare for update page\r\n  async getOriginalAccountID(id: number) {\r\n    this.accountId = id;\r\n    let response = await this.coaService.getAccount(this.accountId).toPromise();\r\n    this.accountCheck = response;\r\n  }\r\n\r\n\r\n  resetUpdate() {\r\n    this.coaService.getAccount(this.editCoA.caId)\r\n      .subscribe(user => {\r\n          this.editCoA = user;\r\n          this.accountCheck = user;\r\n        }\r\n      );\r\n  }\r\n\r\n  isNegativeNumber(accountNumber) {\r\n    return (accountNumber < 0);\r\n  }\r\n}\r\n\r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\n#ledgerTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <table id=\\\"ledgerTable\\\">\\r\\n    <tr>\\r\\n      <th colspan=\\\"9\\\" class=\\\"col-xs-1 text-center\\\">General Ledger</th>\\r\\n    <tr>\\r\\n    <tr>\\r\\n      <th >Account Number</th>\\r\\n      <th >Account Name</th>\\r\\n      <th >Account Type</th>\\r\\n      <th >Account Subtype</th>\\r\\n      <th >Normal Side</th>\\r\\n      <th >Original Balance</th>\\r\\n      <th >Current Balance</th>\\r\\n      <th >Account Description</th>\\r\\n      <th >Active</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let account of accounts\\\">\\r\\n      <td>{{ account.accountNumber }}</td>\\r\\n      <td>\\r\\n        <button class=\\\"btn btn-link\\\" style=\\\"color: #fab82a\\\" (click)=\\\"viewLedger(account.accountName)\\\" id=\\\"button1\\\" >{{ account.accountName }}</button></td>\\r\\n      <td>{{ account.accountType }}</td>\\r\\n      <td>{{ account.accountSubType }}</td>\\r\\n      <td>{{ account.normalSide }}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{ account.originalBalance | number : '1.2-2'}}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{ account.currentBalance | number : '1.2-2'}}</td>\\r\\n      <td>{{ account.comment }}</td>\\r\\n      <td>{{ account.active }}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {CoAService} from '../services/coa.service';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-general-ledger',\r\n  templateUrl: './general-ledger.component.html',\r\n  styleUrls: ['./general-ledger.component.css']\r\n})\r\nexport class GeneralLedgerComponent implements OnInit {\r\n  accounts = [];\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private coaService: CoAService,\r\n    private data: SharedDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //this.viewAccounts();\r\n    this.viewAccountsSort('caId','ASC', 'All', null);\r\n  }\r\n\r\n  viewAccounts() {\r\n    this.coaService.findAll().subscribe(\r\n      (account) => {\r\n        this.accounts = account;\r\n      });\r\n  }\r\n\r\n  viewAccountsSort(column: string, direction: string, columnSearch: string, criteria: string) {\r\n    this.coaService.findAllSort(column, direction, columnSearch, criteria).subscribe(\r\n      (account) => {\r\n        this.accounts = account;\r\n      });\r\n  }\r\n\r\n  viewLedger(accountName){\r\n    this.data.setAccount(accountName);\r\n    this.router.navigate(['UserPage/ledger', accountName]);\r\n  }\r\n  stuff(){\r\n\r\n  }\r\n\r\n}\r\n","export class GeneralLedger {\r\n  glId: number;\r\n  AccountNumber: number;\r\n  Date: Date;\r\n  AccountName: string;\r\n  Reference: string;\r\n  Description: string;\r\n  NormalSide: string;\r\n  DebitAmount: number;\r\n  CreditAmount: number;\r\n\r\n}\r\n\r\n","module.exports = \"table, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#image {\\r\\n  background-image:url('logo.png');\\r\\n  background-position: center;\\r\\n  background-size: 170px 260px;\\r\\n  width: 170px;\\r\\n  height: 260px;\\r\\n\\r\\n}\\r\\n\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 20%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#center2 {\\r\\n  position: relative;\\r\\n  padding-top: 20px;\\r\\n  width: 100%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"center\\\">\\r\\n  <div id=\\\"image\\\">\\r\\n  </div>\\r\\n  <div id=\\\"center2\\\">\\r\\n    <h3>{{welcome}}</h3>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AppComponent} from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-home-screen',\r\n  templateUrl: './home-screen.component.html',\r\n  styleUrls: ['./home-screen.component.css']\r\n})\r\nexport class HomeScreenComponent implements OnInit {\r\n\r\n  welcome = '';\r\n\r\n  constructor(private comp: AppComponent,) { }\r\n\r\n  ngOnInit() {\r\n    this.welcome = 'Welcome ' + this.comp.getFirstName();\r\n  }\r\n\r\n}\r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n#journalTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n#height {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n#journalAccountAddTable{\\r\\n  font-family: arial, sans-serif;\\r\\n  color: black;\\r\\n}\\r\\n.accountsAdd{\\r\\n  font-weight:400;\\r\\n  color: black;\\r\\n  border: none;\\r\\n}\\r\\n.accountsinput{\\r\\n  color: black;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist{\\r\\n  background-color: transparent;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist2{\\r\\n  background-color: transparent;\\r\\n  text-indent: 25px;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist3{\\r\\n  background-color: transparent;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist4{\\r\\n  background-color: transparent;\\r\\n  text-indent: 8px;\\r\\n  border: 1px solid #6e7d93;\\r\\n\\r\\n}\\r\\n.trbackground{\\r\\n  background-color: white;\\r\\n}\\r\\n.modal {\\r\\n  display: none; /* Hidden by default */\\r\\n  position: fixed; /* Stay in place */\\r\\n  z-index: 1; /* Sit on top */\\r\\n  padding-top: 100px; /* Location of the box */\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  width: 100%; /* Full width */\\r\\n  height: 100%; /* Full height */\\r\\n  overflow: auto; /* Enable scroll if needed */\\r\\n  background-color: rgb(0,0,0); /* Fallback color */\\r\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div style=\\\"padding-top: 20px\\\">\\r\\n  <table id=\\\"journalTable\\\" style=\\\" table-layout:fixed\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th colspan=\\\"8\\\" class=\\\"col-xs-1 text-center\\\">Individual Journal</th>\\r\\n    <tr>\\r\\n    <tr>\\r\\n      <th><abbr title=\\\"Date\\\"></abbr>Date</th>\\r\\n      <th><abbr title=\\\"Type\\\"></abbr>Type</th>\\r\\n      <th><abbr title=\\\"Created By\\\"></abbr>Created By</th>\\r\\n      <th><abbr title=\\\"Accounts\\\"></abbr>Accounts</th>\\r\\n      <th><abbr title=\\\"Reference\\\"></abbr>REF</th>\\r\\n      <th><abbr title=\\\"Debit\\\"></abbr>Debit</th>\\r\\n      <th><abbr title=\\\"Credit\\\"></abbr>Credit</th>\\r\\n      <th><abbr title=\\\"Credit\\\"></abbr>Status</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tr >\\r\\n      <td style=\\\"vertical-align: top\\\"  >{{ thisJournal.Date | date: 'MM/dd/yyyy'}}</td>\\r\\n      <td>\\r\\n    <tr *ngFor=\\\"let jaccount of thisJournal.JournalAccounts\\\" style=\\\" background-color: transparent\\\">\\r\\n      <td class=\\\"accountslist2\\\">{{jaccount.Type}}</td>\\r\\n    </tr>\\r\\n    </td>\\r\\n    <td style=\\\"vertical-align: top\\\" >{{ thisJournal.CreatedBy }}</td>\\r\\n    <td>\\r\\n      <tr *ngFor=\\\"let jaccount of thisJournal.JournalAccounts\\\" style=\\\" background-color: transparent\\\" >\\r\\n        <td  class=\\\"accountslist2\\\" *ngIf=\\\"jaccount.NormalSide == 'Credit'\\\" >\\r\\n         {{ jaccount.AccountName }}</td>\\r\\n        <td  class=\\\"accountslist\\\" *ngIf=\\\"jaccount.NormalSide == 'Debit'\\\">\\r\\n          {{ jaccount.AccountName }}\\r\\n        </td>\\r\\n\\r\\n      </tr>\\r\\n    </td>\\r\\n\\r\\n    <td style=\\\"vertical-align: top\\\">{{ thisJournal.Reference }}</td>\\r\\n\\r\\n    <td >\\r\\n      <table class=\\\"tableAlign\\\">\\r\\n        <tr *ngFor=\\\"let jaccount of thisJournal.JournalAccounts; let b = index\\\" style=\\\" background-color: transparent\\\">\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.DebitAmount == null\\\"  style=\\\"text-align: right;\\\">&nbsp;</td>\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.DebitAmount != null && b == 0\\\"  style=\\\"float:right\\\">{{\\\"$\\\"+(jaccount.DebitAmount | number : '1.2-2')}}</td>\\r\\n          <td class=\\\"accountslist3\\\"  *ngIf=\\\"jaccount.DebitAmount != null && b != 0\\\"  style=\\\"text-align: right;\\\">{{(jaccount.DebitAmount | number : '1.2-2')}}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </td>\\r\\n\\r\\n    <td >\\r\\n      <table class=\\\"tableAlign\\\">\\r\\n        <tr *ngFor=\\\"let jaccount of thisJournal.JournalAccounts; let i = index\\\" style=\\\" background-color: transparent;\\\">\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.CreditAmount == null\\\"  style=\\\"text-align: right;\\\">&nbsp;</td>\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.CreditAmount != null && i == getNumberDebits(thisJournal.JournalAccounts)\\\"  style=\\\"text-align: right;\\\">{{\\\"$\\\"+(jaccount.CreditAmount | number : '1.2-2')}}</td>\\r\\n          <td class=\\\"accountslist3\\\" *ngIf=\\\"jaccount.CreditAmount != null && i != getNumberDebits(thisJournal.JournalAccounts)\\\"  style=\\\"text-align: right;\\\">{{(jaccount.CreditAmount | number : '1.2-2')}}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </td>\\r\\n    <td style=\\\"vertical-align: top\\\">\\r\\n\\r\\n      <label *ngIf=\\\"thisJournal.acceptance != null\\\" style=\\\"text-align: right;\\\">{{thisJournal.acceptance}}</label>\\r\\n      <label *ngIf=\\\"thisJournal.acceptance == null\\\" style=\\\"text-align: right;\\\">Pending</label>\\r\\n\\r\\n    </td>\\r\\n\\r\\n    </tr>\\r\\n  </table>\\r\\n  <button class=\\\"btn btn-info btn-lg\\\" (click)=\\\"viewGenJournal()\\\" >General Journal</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {JournalizeService} from '../services/journalize.service';\r\nimport {SharedDataService} from '../services/shared-data.service';\r\nimport { Journal } from '../journal';\r\nimport {JournalAccount} from '../journalAccount';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-individual-journal',\r\n  templateUrl: './individual-journal.component.html',\r\n  styleUrls: ['./individual-journal.component.css']\r\n})\r\nexport class IndividualJournalComponent implements OnInit {\r\n\r\n   thisJournal  = Journal;\r\n   /*\r\n    * THIS SHOULD BE PRIVATE BUT WON'T COMPILE\r\n    *\r\n    * SHOULD BE REWORKED TO ACCOUNT FOR THIS\r\n    */\r\n   journals = [];\r\n\r\n  constructor(\r\n    private journalServ: JournalizeService,\r\n    private data: SharedDataService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.viewJournals();\r\n  }\r\n\r\n  viewJournals() {\r\n    this.journalServ.findAll().subscribe(\r\n      (journal) => {\r\n        this.journals = journal;\r\n        let temp = this.data.getReference();\r\n        for(let journ of this.journals){\r\n          if(temp == journ.Reference){\r\n            this.thisJournal = journ;\r\n            break\r\n          }\r\n        }\r\n        console.log(this.journals);\r\n      }\r\n    );\r\n  }\r\n\r\n  viewGenJournal(){\r\n    this.router.navigate(['UserPage/journal']);\r\n  }\r\n\r\n\r\n  getNumberDebits(journalAcc: JournalAccount[]): number{\r\n    let num = 0;\r\n    for(let j of journalAcc){\r\n      if(j.DebitAmount !=null){\r\n        num++;\r\n      }\r\n    }\r\n    return num;\r\n\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\n#ledgerTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"form-group\\\">\\r\\n  <table id=\\\"ledgerTable\\\" style=\\\" table-layout:fixed\\\">\\r\\n    <tr>\\r\\n      <th colspan=\\\"7\\\" >\\r\\n        <label>{{'Account #: '+ currentCoA.accountNumber}}</label>\\r\\n        <label style=\\\"margin: auto; padding-left: 40%\\\">{{account}}</label></th>\\r\\n    <tr>\\r\\n    <tr>\\r\\n      <th >Date</th>\\r\\n      <th >Number</th>\\r\\n      <th >Description</th>\\r\\n      <th >REF</th>\\r\\n      <th >Debit</th>\\r\\n      <th >Credit</th>\\r\\n      <th >Balance</th>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th ></th>\\r\\n      <th ></th>\\r\\n      <th ></th>\\r\\n      <th ></th>\\r\\n      <th ></th>\\r\\n      <th ></th>\\r\\n      <th style=\\\"text-align: right;\\\">0</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let account of accountList2\\\">\\r\\n      <td>{{ account.Date | date: 'MM/dd/yyyy'}}</td>\\r\\n      <td>{{ account.AccountNumber }}</td>\\r\\n      <td>{{ account.Description }}</td>\\r\\n      <td (click)=\\\"viewJournal(account.Reference)\\\">{{ account.Reference}}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{ account.DebitAmount | number : '1.2-2' }}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{ account.CreditAmount | number : '1.2-2'}}</td>\\r\\n      <td style=\\\"text-align: right;\\\">{{calculateTotal(account.glId) | number : '1.2-2'}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\nimport { GeneralLedgerService } from '../services/general-ledger.service';\r\nimport {CoAService} from '../services/coa.service';\r\nimport {CoA} from '../chart-of-accounts';\r\nimport { GeneralLedger } from '../generalLedger';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-individual-ledger',\r\n  templateUrl: './individual-ledger.component.html',\r\n  styleUrls: ['./individual-ledger.component.css']\r\n})\r\nexport class IndividualLedgerComponent implements OnInit {\r\n  account = 'temp';\r\n  currentCoA = new CoA();\r\n  accountList = []; //entire list of approved accounts\r\n  accountList2 = []; //list of specified accounts\r\n  accountListDebitFirst = [];\r\n  isStartDebit = 0;\r\n  total = 0;\r\n  displayTotal = 0;\r\n\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private data: SharedDataService,\r\n    private cserv: CoAService,\r\n    private ledgerServ: GeneralLedgerService,\r\n    private coaService: CoAService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isStartDebit = 0;\r\n    this.viewLedger();\r\n      this.getAccount();\r\n\r\n  }\r\n\r\n  async getAccount(){\r\n    this.accountList = [];\r\n    this.accountList2 = [];\r\n    this.account = this.data.getAccount();\r\n    let result = await this.cserv.getByName(this.account).toPromise();\r\n    this.currentCoA = result;\r\n    console.log(this.currentCoA);\r\n    this.total = this.currentCoA.originalBalance;\r\n    this.displayTotal = this.total;\r\n  }\r\n  async viewLedger() {\r\n    this.ledgerServ.findAll().subscribe( (result) => {\r\n      this.accountList = result;\r\n      for(let acc1 of this.accountList){\r\n        if(acc1.AccountName == this.account){\r\n          this.accountList2.push(acc1);\r\n        }\r\n      }\r\n      console.log(this.accountList2);\r\n      //this.getDebitFirst();\r\n    });\r\n\r\n  }\r\n  //this forces first balance to be negative for Credit side accounts, will keep for later\r\n  getDebitFirst(){\r\n    if(this.accountList2[0].CreditAmount != null){\r\n      for(let acc of this.accountList2){\r\n        if(acc.DebitAmount != null){\r\n          let genled = acc;\r\n          this.accountList2.splice(this.accountList2.indexOf(acc), 1);\r\n          this.accountList2.unshift(genled);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  viewJournal(ref){\r\n    this.data.setReference(ref);\r\n    this.router.navigate(['UserPage/journal_info']);\r\n  }\r\n\r\n  calculateTotal(accountID): number{\r\n    let num = 0;\r\n    for(let account of this.accountList2){\r\n      if(account.NormalSide == 'Debit') {\r\n\r\n        if (account.DebitAmount != null) {\r\n          if (account.glId != accountID) {\r\n            num = +num + +account.DebitAmount;\r\n          }\r\n          else {\r\n            num = +num + +account.DebitAmount;\r\n            return num;\r\n          }\r\n        }\r\n        else {\r\n          if (account.glId != accountID) {\r\n            num = +num - +account.CreditAmount;\r\n          }\r\n          else {\r\n            num = +num - +account.CreditAmount;\r\n            return num;\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        if (account.DebitAmount != null) {\r\n          if (account.glId != accountID) {\r\n            num = +num - +account.DebitAmount;\r\n          }\r\n          else {\r\n            num = +num - +account.DebitAmount;\r\n            return num;\r\n          }\r\n        }\r\n        else {\r\n          if (account.glId != accountID) {\r\n            num = +num + +account.CreditAmount;\r\n          }\r\n          else {\r\n            num = +num + +account.CreditAmount;\r\n            return num;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export class Journal {\r\n  JId: number;\r\n  Date?: Date;\r\n  Description: string;\r\n  Reference?: string;\r\n  CreatedBy?: string;\r\n  FileID: number;\r\n  acceptance?: string;\r\n}\r\n","export class JournalAccount{\r\n  JAId: number;\r\n  AccountName: string;\r\n  Type: string;\r\n  NormalSide: string;\r\n  DebitAmount: number;\r\n  CreditAmount: number;\r\n  JournalJId: number;\r\n}\r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\nbutton.link { background:none;border:none; }\\r\\nbutton.hover { background:none;border:none; }\\r\\n#journalTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n#height {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n#journalAccountAddTable{\\r\\n  font-family: arial, sans-serif;\\r\\n  color: black;\\r\\n}\\r\\n.accountsAdd{\\r\\n  font-weight:400;\\r\\n  color: black;\\r\\n  border: none;\\r\\n}\\r\\n.accountsinput{\\r\\n  color: black;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist{\\r\\n  background-color: transparent;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist2{\\r\\n  background-color: transparent;\\r\\n  text-indent: 25px;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist3{\\r\\n  background-color: transparent;\\r\\n  border: none;\\r\\n}\\r\\n.accountslist4{\\r\\n  background-color: transparent;\\r\\n  text-indent: 8px;\\r\\n  border: 1px solid #6e7d93;\\r\\n\\r\\n}\\r\\n.trbackground{\\r\\n  background-color: white;\\r\\n}\\r\\n.modal {\\r\\n  display: none; /* Hidden by default */\\r\\n  position: fixed; /* Stay in place */\\r\\n  z-index: 1; /* Sit on top */\\r\\n  padding-top: 100px; /* Location of the box */\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  width: 100%; /* Full width */\\r\\n  height: 100%; /* Full height */\\r\\n  overflow: auto; /* Enable scroll if needed */\\r\\n  background-color: rgb(0,0,0); /* Fallback color */\\r\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n/* Modal Content */\\r\\n.modal-content {\\r\\n  background-color: #fefefe;\\r\\n  margin: auto;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #888;\\r\\n  width: 80%;\\r\\n}\\r\\n/* The switch - the box around the slider */\\r\\n.switch {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  width: 60px;\\r\\n  height: 34px;\\r\\n}\\r\\n/* Hide default HTML checkbox */\\r\\n.switch input {display:none;}\\r\\n/* The slider */\\r\\n.slider {\\r\\n  position: absolute;\\r\\n  cursor: pointer;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background-color: #ccc;\\r\\n  transition: .4s;\\r\\n}\\r\\n.slider:before {\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  height: 26px;\\r\\n  width: 26px;\\r\\n  left: 4px;\\r\\n  bottom: 4px;\\r\\n  background-color: white;\\r\\n  transition: .4s;\\r\\n}\\r\\ninput:checked + .slider {\\r\\n  background-color: #2196F3;\\r\\n}\\r\\ninput:focus + .slider {\\r\\n  box-shadow: 0 0 1px #2196F3;\\r\\n}\\r\\ninput:checked + .slider:before {\\r\\n  -webkit-transform: translateX(26px);\\r\\n  transform: translateX(26px);\\r\\n}\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\n  border-radius: 34px;\\r\\n}\\r\\n.slider.round:before {\\r\\n  border-radius: 50%;\\r\\n}\\r\\n.row {\\r\\n display: block/* equal height of the children */\\r\\n}\\r\\n.tableAlign{\\r\\n  margin-left: auto;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n    <div class=\\\"column is-half\\\" hidden>\\r\\n      <div class=\\\"level-right\\\">\\r\\n        <p class=\\\"level-item\\\"><strong>All</strong></p>\\r\\n        <p class=\\\"level-item\\\"><a>Approved</a></p>\\r\\n        <p class=\\\"level-item\\\"><a>Needs Approval</a></p>\\r\\n        <p class=\\\"level-item\\\"><a>Rejected</a></p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- End of row 2: right column -->\\r\\n\\r\\n\\r\\n\\r\\n    <div id=\\\"createJournalEntry\\\" class=\\\"modal\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <form #addJournalForm=\\\"ngForm\\\">\\r\\n\\r\\n          <hr/>\\r\\n          <div style=\\\"width: 200px\\\">\\r\\n            <label>Date</label>\\r\\n          <my-date-picker name=\\\"myDate\\\" [options]=\\\"myDatePickerOptions\\\" [(ngModel)]=\\\"model\\\"  required></my-date-picker>\\r\\n            </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"description\\\">Description</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"journalNew.Description\\\"\\r\\n                   name=\\\"description\\\" >\\r\\n          </div>\\r\\n          <hr id=\\\"journalAccountAddTable\\\">\\r\\n          <table>\\r\\n            <tr >\\r\\n              <th class=\\\"accountsAdd\\\"><abbr title=\\\"Date\\\"></abbr>Account</th>\\r\\n              <th class=\\\"accountsAdd\\\"><abbr title=\\\"Date\\\"></abbr>Debits</th>\\r\\n              <th class=\\\"accountsAdd\\\"><abbr title=\\\"Date\\\"></abbr>Credits</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let account of journalAccountsDebit\\\" class=\\\"trbackground\\\">\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\">\\r\\n                <select id=\\\"debitDropDown\\\"  class=\\\"form-control\\\" style=\\\"width: 200px\\\" required\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                         [(ngModel)]=\\\"account.AccountName\\\" [name]=\\\"account.AccountName\\\"\\r\\n                        (ngModelChange)=\\\"checkRepeatDebitAccount(); \\\"\\r\\n                          #accountSubType=\\\"ngModel\\\">\\r\\n                  <option disabled>Debits:</option>\\r\\n                  <option *ngFor=\\\"let accountDeb of debitAccounts\\\">{{accountDeb }}</option>\\r\\n                  <option disabled>Credits:</option>\\r\\n                  <option *ngFor=\\\"let accountCred of creditAccounts\\\">{{accountCred}}</option>\\r\\n                </select>\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white; \\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [textMask]=\\\"{mask: currencyMask}\\\" id=\\\"DebitAmount\\\" placeholder=\\\"Debit\\\" style=\\\"text-align: right;\\\"\\r\\n                       required [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\r\\n                       [name]=\\\"account.DebitAmount\\\" [(ngModel)]=\\\"account.DebitAmount\\\"  (ngModelChange)=\\\"getDebitTotal(); \\\">\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CreditAmount\\\" placeholder=\\\"Credit\\\" disabled style=\\\"text-align: right;\\\"\\r\\n                       name=\\\"description3\\\" >\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\" *ngIf=\\\"journalAccountsDebit.indexOf(account) > 0\\\">\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeDebit(journalAccountsDebit.indexOf(account)); checkRepeatDebitAccount();\\\" id=\\\"removeDebitInput\\\"   >Remove</button>\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\">\\r\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"addDebitInput()\\\" id=\\\"addDebitInput\\\"  *ngIf=\\\"journalAccountsDebit.indexOf(account) == journalAccountsDebit.length -1\\\">Add Debit</button>\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let account of journalAccountsCredit\\\" class=\\\"trbackground\\\">\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\">\\r\\n              <select id=\\\"creditDropDown\\\" class=\\\"form-control\\\" style=\\\"width: 200px\\\" required\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n\\r\\n                      [(ngModel)]=\\\"account.AccountName\\\" [name]=\\\"account.AccountName\\\"\\r\\n                      (ngModelChange)=\\\"checkRepeatCreditAccount()\\\"\\r\\n                      #accountSubType=\\\"ngModel\\\">\\r\\n                <option disabled>Debits:</option>\\r\\n                <option *ngFor=\\\"let accountDeb of debitAccounts\\\">{{accountDeb}}</option>\\r\\n                <option disabled>Credits:</option>\\r\\n                <option *ngFor=\\\"let accountCred of creditAccounts\\\">{{accountCred}}</option>\\r\\n              </select>\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DebitAmount2\\\" placeholder=\\\"Debit\\\" disabled style=\\\"text-align: right;\\\"\\r\\n                       name=\\\"description5\\\" >\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white; text-align: right;\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"CreditAmount2\\\" placeholder=\\\"Credit\\\" required  style=\\\"text-align: right;\\\"\\r\\n                       [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                       [(ngModel)]=\\\"account.CreditAmount\\\"\\r\\n                       (ngModelChange)=\\\"getCreditTotal()\\\"\\r\\n                       [name]=\\\"account.CreditAmount\\\"\\r\\n                       >\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\" *ngIf=\\\"journalAccountsCredit.indexOf(account) > 0\\\">\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeCredit(journalAccountsCredit.indexOf(account)); checkRepeatCreditAccount();\\\" id=\\\"removeCreditInput\\\"   >Remove</button>\\r\\n              </td>\\r\\n              <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\">\\r\\n                <button class=\\\"btn btn-info\\\" (click)=\\\"addCreditInput();\\\" id=\\\"addCreditInput\\\"  *ngIf=\\\"journalAccountsCredit.indexOf(account) == journalAccountsCredit.length -1\\\">Add Credit</button>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n\\r\\n             <tr class=\\\"trbackground\\\">\\r\\n               <td class=\\\"accountsinput\\\" style=\\\" background-color: white\\\"></td>\\r\\n               <td class=\\\"accountsinput\\\" style=\\\" background-color: white; text-align: right;\\\" >{{'$' + (totalDebit | number : '1.2-2')}}</td>\\r\\n               <td class=\\\"accountsinput\\\" style=\\\" background-color: white; text-align: right;\\\" >{{'$' + (totalCredit | number : '1.2-2')}}</td>\\r\\n\\r\\n             </tr>\\r\\n          </table>\\r\\n          <form enctype=\\\"multipart/form-data\\\">\\r\\n            <input #folderInput type=\\\"file\\\" (change)=\\\"selectFile($event.target.files)\\\" >\\r\\n          </form>\\r\\n          <hr/>\\r\\n          <div *ngIf=\\\"totalsmatch == 0\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 340px;\\\">\\r\\n            Debit and Credits do not match\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"repeatDebitAccount == 0\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 340px;\\\">\\r\\n            You have duplicate accounts\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"repeatCreditAccount == 0\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 340px;\\\">\\r\\n            You have duplicate accounts\\r\\n          </div>\\r\\n          <button (click)=\\\"submit();\\\" id=\\\"submitBtn\\\" [disabled]=\\\"checkBothInputs() == 0\\\" >Submit</button>\\r\\n          <button (click)=\\\"close(); addJournalForm.reset()\\\" id=\\\"closeModalBtn\\\">Cancel</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<!--base table-->\\r\\n\\r\\n    <form class=\\\"form-inline\\\" style=\\\"left: 8px\\\">\\r\\n      <div style=\\\"position:  relative;left: 75%;  padding-top: 20px\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"searchBar\\\"  style=\\\"width: 300px; left: 6px\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"criteria\\\"\\r\\n                 (ngModelChange)=\\\"viewJournalsSort(column, 'ASC', columnSearch, $event, approvalType)\\\"\\r\\n                 name=\\\"search\\\" >\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <button class=\\\"btn btn-info btn-lg\\\" (click)=\\\"openCreateJournal()\\\" >Add Journal</button>\\r\\n    <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\" style=\\\"float: right; margin-right: 8%\\\">\\r\\n      <label class=\\\"btn btn-secondary\\\">\\r\\n        <input type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option1\\\" autocomplete=\\\"off\\\" checked (click)=\\\"setApprovalType('Approved')\\\">Approved\\r\\n      </label>\\r\\n      <label class=\\\"btn btn-secondary\\\">\\r\\n        <input type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option2\\\" autocomplete=\\\"off\\\" (click)=\\\"setApprovalType('Declined')\\\">Declined\\r\\n      </label>\\r\\n      <label class=\\\"btn btn-secondary\\\">\\r\\n        <input type=\\\"radio\\\" name=\\\"options\\\" id=\\\"option3\\\" autocomplete=\\\"off\\\" (click)=\\\"setApprovalType(null)\\\">Pending\\r\\n      </label>\\r\\n    </div>\\r\\n<div>\\r\\n  <table id=\\\"journalTable\\\" style=\\\" table-layout:fixed\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th colspan=\\\"8\\\" class=\\\"col-xs-1 text-center\\\">General Journal</th>\\r\\n    <tr>\\r\\n    <tr>\\r\\n      <th><abbr title=\\\"Date\\\"></abbr>Date</th>\\r\\n      <th><abbr title=\\\"Type\\\"></abbr>Type</th>\\r\\n      <th><abbr title=\\\"Created By\\\"></abbr>Created By</th>\\r\\n      <th><abbr title=\\\"Accounts\\\"></abbr>Accounts</th>\\r\\n      <th><abbr title=\\\"Reference\\\"></abbr>REF</th>\\r\\n      <th><abbr title=\\\"Debit\\\"></abbr>Debit</th>\\r\\n      <th><abbr title=\\\"Credit\\\"></abbr>Credit</th>\\r\\n      <th><abbr title=\\\"Credit\\\"></abbr>Status</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tr *ngFor=\\\"let journal of journals\\\">\\r\\n      <td style=\\\"vertical-align: top\\\"  >{{ journal.Date | date: 'MM/dd/yyyy'}}</td>\\r\\n      <td>\\r\\n        <tr *ngFor=\\\"let jaccount of journal.JournalAccounts\\\" style=\\\" background-color: transparent\\\">\\r\\n         <td class=\\\"accountslist2\\\">{{jaccount.Type}}</td>\\r\\n        </tr>\\r\\n      </td>\\r\\n      <td style=\\\"vertical-align: top\\\" >{{ journal.CreatedBy }}</td>\\r\\n      <td>\\r\\n        <tr *ngFor=\\\"let jaccount of journal.JournalAccounts\\\" style=\\\" background-color: transparent\\\" >\\r\\n          <td  class=\\\"accountslist2\\\" *ngIf=\\\"jaccount.NormalSide == 'Credit'\\\" >\\r\\n            <button class=\\\"hover\\\" style=\\\"color: white\\\" (click)=\\\"viewLedger(jaccount.AccountName)\\\" id=\\\"button1\\\" >{{ jaccount.AccountName }}</button></td>\\r\\n          <td  class=\\\"accountslist\\\" *ngIf=\\\"jaccount.NormalSide == 'Debit'\\\">\\r\\n            <button class=\\\"hover\\\" style=\\\"color: white\\\" (click)=\\\"viewLedger(jaccount.AccountName)\\\" id=\\\"button2\\\" >{{ jaccount.AccountName }}</button>\\r\\n          </td>\\r\\n\\r\\n       </tr>\\r\\n      </td>\\r\\n\\r\\n      <td style=\\\"vertical-align: top\\\">{{ journal.Reference }}</td>\\r\\n\\r\\n      <td >\\r\\n        <table class=\\\"tableAlign\\\">\\r\\n        <tr *ngFor=\\\"let jaccount of journal.JournalAccounts; let b = index\\\" style=\\\" background-color: transparent\\\">\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.DebitAmount == null\\\"  style=\\\"text-align: right;\\\">&nbsp;</td>\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.DebitAmount != null && b == 0\\\"  style=\\\"float:right\\\">{{\\\"$\\\"+(jaccount.DebitAmount | number : '1.2-2')}}</td>\\r\\n          <td class=\\\"accountslist3\\\"  *ngIf=\\\"jaccount.DebitAmount != null && b != 0\\\"  style=\\\"text-align: right;\\\">{{(jaccount.DebitAmount | number : '1.2-2')}}</td>\\r\\n        </tr>\\r\\n        </table>\\r\\n      </td>\\r\\n\\r\\n      <td >\\r\\n        <table class=\\\"tableAlign\\\">\\r\\n        <tr *ngFor=\\\"let jaccount of journal.JournalAccounts; let i = index\\\" style=\\\" background-color: transparent;\\\">\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.CreditAmount == null\\\"  style=\\\"text-align: right;\\\">&nbsp;</td>\\r\\n          <td class=\\\"accountslist\\\"  *ngIf=\\\"jaccount.CreditAmount != null && i == getNumberDebits(journal.JournalAccounts)\\\"  style=\\\"text-align: right;\\\">{{\\\"$\\\"+(jaccount.CreditAmount | number : '1.2-2')}}</td>\\r\\n          <td class=\\\"accountslist3\\\" *ngIf=\\\"jaccount.CreditAmount != null && i != getNumberDebits(journal.JournalAccounts)\\\"  style=\\\"text-align: right;\\\">{{(jaccount.CreditAmount | number : '1.2-2')}}</td>\\r\\n        </tr>\\r\\n        </table>\\r\\n      </td>\\r\\n    <td style=\\\"vertical-align: top\\\">\\r\\n      <div *ngIf=\\\"access == 2\\\">\\r\\n        <button class=\\\"btn btn-info\\\" style=\\\"\\\" (click)=\\\"approveJournal(journal)\\\"  *ngIf=\\\"journal.acceptance == null\\\" >Approve</button>\\r\\n      </div>\\r\\n      <label *ngIf=\\\"journal.acceptance != null\\\">{{journal.acceptance}}</label>\\r\\n      <label *ngIf=\\\"journal.acceptance == null && access == 3\\\">Pending</label>\\r\\n      <div *ngIf=\\\"access == 2\\\">\\r\\n        <button class=\\\"btn btn-danger\\\" style=\\\"width: 95px\\\" (click)=\\\"declineJournal(journal)\\\"  *ngIf=\\\"journal.acceptance == null\\\" >Decline</button>\\r\\n      </div>\\r\\n    </td>\\r\\n\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component, OnInit, ViewChild, ElementRef} from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { JournalizeService} from '../services/journalize.service';\r\nimport { GeneralLedgerService } from '../services/general-ledger.service';\r\nimport { Journal } from '../journal';\r\nimport { JournalAccount } from '../journalAccount';\r\nimport { CoA } from '../chart-of-accounts';\r\nimport {GeneralLedger } from '../generalLedger';\r\nimport {CoAService} from '../services/coa.service';\r\nimport {NgForm} from '@angular/forms';\r\nimport {IMyDpOptions} from 'mydatepicker';\r\nimport {AppComponent} from '../app.component';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    //'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    \"Access-Control-Allow-Headers\": '*',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\r\n  })\r\n};\r\n\r\n@Component({\r\n  selector: 'app-journalize',\r\n  templateUrl: './journalize.component.html',\r\n  styleUrls: ['./journalize.component.css']\r\n})\r\nexport class JournalizeComponent implements OnInit {\r\n  @ViewChild('addJournalForm') public journalForm: NgForm;\r\n  @ViewChild('journalAccountAddTable') public accountsTable: NgForm;\r\n  @ViewChild('folderInput') public myInputVariable: ElementRef;\r\n  private fileUploadURL = 'http://localhost:8080/api/journalFiles';\r\n  journalNew = new Journal();\r\n  journals = []; //list of journal entries\r\n\r\n  journalAccountsDebit = []; //list of Debit journal accounts\r\n  journalAccountsCredit = []; //list of Debit journal accounts\r\n\r\n\r\n  //Account variables for grabbing a list of accounts\r\n  accounts = [];//list of total accounts\r\n  debitAccounts = []; //list of all debit accounts\r\n  creditAccounts = []; //list of all credit accounts\r\n  totalDebit: number = 0.00;\r\n  totalCredit: number = 0.00;\r\n  selectedFile: File;\r\n\r\n //search functions.\r\n  column = 'JId';\r\n  columnSearch = 'all';\r\n  approvalType = 'all';\r\n  criteria= '';\r\n\r\n  //error variables\r\n  fieldsFilled = 0;\r\n  fieldsFilled2 = 0;\r\n  totalsmatch = 1;\r\n  repeatDebitAccount = 1;\r\n  repeatCreditAccount = 1;\r\n\r\n  //user access\r\n  access = 0;\r\n\r\n  myDatePickerOptions: IMyDpOptions = {\r\n    dateFormat: 'dd.mm.yyyy',\r\n    editableDateField: false\r\n  };\r\n\r\n  private currencyMask = createNumberMask({\r\n    prefix: '',\r\n    suffix: '',\r\n    includeThousandsSeparator: false,\r\n    //thousandsSeparatorSymbol: ',',\r\n    allowDecimal: true,\r\n    decimalSymbol: '.',\r\n    decimalLimit: 2,\r\n    integerLimit: null,\r\n    requireDecimal: false,\r\n    precision: 2,\r\n    allowNegative: false,\r\n    allowLeadingZeroes: false\r\n  });\r\n\r\n  model: any = {date: {year: 2018, month: 10, day: 9}};\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private coaService: CoAService,\r\n    private journalServ: JournalizeService,\r\n    private ledgerServ: GeneralLedgerService,\r\n    private comp: AppComponent,\r\n    private http: HttpClient,\r\n    private data: SharedDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.journals = [];\r\n    this.journals.length = 0;\r\n    this.onOpened();\r\n    this.getAccounts();\r\n    //this.viewJournals();\r\n    this.viewJournalsSort('JId', 'ASC', 'All', null, 'all');\r\n    //this.viewJournalAccounts();\r\n  }\r\n\r\n  viewJournals() {\r\n    this.journalServ.findAll().subscribe(\r\n      (journal) => {\r\n        this.journals = journal;\r\n        console.log(this.journals);\r\n      }\r\n    );\r\n  }\r\n  //this.viewUsersSort('userId', 'ASC', 'All', null);\r\n\r\n  onOpened() {\r\n    if(this.comp.getRole() === 'admin'){\r\n      this.access = 1;\r\n    }\r\n    else if(this.comp.getRole() === 'manager') {\r\n      this.access = 2;\r\n    }\r\n    else{\r\n      this.access = 3;\r\n    }\r\n  }\r\n\r\n\r\n  viewJournalsSort(column: string, direction: string, columnSearch: string, criteria: string, approvalType: string) {\r\n    this.journalServ.findAllSort(column, direction, columnSearch, criteria, approvalType).subscribe(\r\n      (journal) => {\r\n        this.journals = journal;\r\n        console.log(this.journals);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getNumberDebits(journalAcc: JournalAccount[]): number{\r\n    let num = 0;\r\n    for(let j of journalAcc){\r\n      if(j.DebitAmount !=null){\r\n        num++;\r\n      }\r\n    }\r\n    return num;\r\n\r\n}\r\n\r\n\r\n\r\n  async getAccounts() {\r\n    this.debitAccounts = [];\r\n    this.creditAccounts = [];\r\n    let result = await this.coaService.findAll().toPromise();\r\n    this.accounts = result;\r\n    console.log(\"Hello\");\r\n    for(let account of this.accounts){\r\n      if(account.normalSide == 'Debit'){\r\n        this.debitAccounts.push(account.accountName);\r\n        console.log(\"Debit: \" + account.accountName)\r\n      }\r\n      else{\r\n        this.creditAccounts.push(account.accountName);\r\n        console.log(\"Credit: \" + account.accountName)\r\n      }\r\n    }\r\n  }\r\n  getDebitTotal(){\r\n    this.totalsmatch = 1;\r\n    this.totalDebit = 0.00;\r\n    for(let account of this.journalAccountsDebit){\r\n      if(isNaN(account.DebitAmount) || account.DebitAmount == null){\r\n\r\n      }\r\n      else{\r\n\r\n        this.totalDebit  = +this.totalDebit + +account.DebitAmount;\r\n\r\n      }\r\n    }\r\n  }\r\n  getCreditTotal(){\r\n    this.totalsmatch = 1;\r\n    this.totalCredit = 0.00;\r\n    for(let account of this.journalAccountsCredit){\r\n      if(isNaN(account.CreditAmount) || account.CreditAmount == null){\r\n\r\n      }\r\n      else{\r\n        this.totalCredit  = +this.totalCredit + +account.CreditAmount;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  checkBothInputs(): number{\r\n    if(this.checkInputExist() == 1 && this.checkInputExist2() == 1 && this.journalNew.Description != null && this.journalNew.Description != ''){\r\n      return 1;\r\n    }\r\n    else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  checkInputExist(): number{\r\n    for(let account of this.journalAccountsDebit){\r\n      if(account.AccountName ==undefined || account.DebitAmount==undefined || account.DebitAmount== 0 || isNaN(account.DebitAmount)){\r\n        this.fieldsFilled = 0;\r\n        break;\r\n\r\n      }\r\n      else{\r\n        this.fieldsFilled = 1;\r\n      }\r\n\r\n    }\r\n    return this.fieldsFilled;\r\n\r\n  }\r\n  checkInputExist2(): number{\r\n    for(let account of this.journalAccountsCredit){\r\n      if(account.AccountName ==undefined || account.CreditAmount==undefined || account.CreditAmount== 0 || isNaN(account.CreditAmount)){\r\n       this.fieldsFilled2 = 0;\r\n       break;\r\n      }\r\n      else{\r\n        this.fieldsFilled2 = 1;\r\n      }\r\n    }\r\n    return this.fieldsFilled2\r\n  }\r\n\r\n  addDebitInput(){\r\n    let debit = new JournalAccount();\r\n    this.journalAccountsDebit.push(debit);\r\n    console.log(this.journalAccountsDebit[0].AccountName);\r\n    this.checkInputExist();\r\n  }\r\n\r\n  addCreditInput(){\r\n    let credit = new JournalAccount();\r\n    this.journalAccountsCredit.push(credit);\r\n    this.checkInputExist2();\r\n\r\n  }\r\n\r\n\r\n  openCreateJournal() {\r\n    this.totalsmatch = 1;\r\n    this.journalAccountsDebit = []; //reset journal accounts\r\n    this.journalAccountsCredit = []; //reset journal accounts\r\n    this.totalDebit = 0;\r\n    this.totalCredit = 0;\r\n    this.loadAccountInput();\r\n    let modal = document.getElementById(\"createJournalEntry\");\r\n    modal.style.display = \"block\";\r\n  }\r\n //creates new starting array for inputs in create form\r\n  loadAccountInput(){\r\n    this.journalAccountsDebit[0] = new JournalAccount();\r\n    this.journalAccountsCredit[0] = new JournalAccount();\r\n  }\r\n\r\n  close() {\r\n    let modal = document.getElementById(\"createJournalEntry\");\r\n    modal.style.display = \"none\";\r\n    this.journalForm.reset();\r\n    this.selectedFile = null;\r\n    this.repeatDebitAccount = 1;\r\n    this.repeatCreditAccount = 1;\r\n    this.myInputVariable.nativeElement.value = \"\";\r\n\r\n  }\r\n\r\n  removeDebit(index){\r\n    this.checkRepeatDebitAccount();\r\n    if (index > -1) {\r\n      this.journalAccountsDebit.splice(index, 1);\r\n    }\r\n\r\n  }\r\n  removeCredit(index){\r\n    this.checkRepeatCreditAccount();\r\n    if (index > -1) {\r\n      this.journalAccountsCredit.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n  checkRepeatDebitAccount(){\r\n    console.log('repeat');\r\n    for(let acc1 of this.journalAccountsDebit){\r\n      for(let acc2 of this.journalAccountsDebit){\r\n        if(this.journalAccountsDebit.indexOf(acc1) == this.journalAccountsDebit.indexOf(acc2)){\r\n          this.repeatDebitAccount = 1;\r\n        }\r\n        else if(acc1.AccountName == acc2.AccountName){\r\n          this.repeatDebitAccount = 0;\r\n          console.log('Duplicate');\r\n          return;\r\n        }\r\n        else{\r\n          this.repeatDebitAccount = 1;\r\n        }\r\n        for(let acc3 of this.journalAccountsCredit){\r\n          if(acc1.AccountName == acc3.AccountName){\r\n            this.repeatDebitAccount = 0;\r\n            return;\r\n          }\r\n          else{\r\n            this.repeatDebitAccount = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  checkRepeatCreditAccount(){\r\n    console.log('repeat');\r\n    for(let acc1 of this.journalAccountsCredit){\r\n      for(let acc2 of this.journalAccountsCredit){\r\n        if(this.journalAccountsCredit.indexOf(acc1) == this.journalAccountsCredit.indexOf(acc2)){\r\n          this.repeatCreditAccount = 1;\r\n        }\r\n        else if(acc1.AccountName == acc2.AccountName){\r\n          this.repeatCreditAccount = 0;\r\n          console.log('Duplicate');\r\n          return;\r\n        }\r\n        else{\r\n          this.repeatCreditAccount = 1;\r\n        }\r\n      }\r\n      for(let acc3 of this.journalAccountsDebit){\r\n        if(acc1.AccountName == acc3.AccountName){\r\n          this.repeatCreditAccount = 0;\r\n          return;\r\n        }\r\n        else{\r\n          this.repeatCreditAccount = 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //posting and updating tables including: journal and journal accounts\r\n  async submit(){\r\n    if(this.totalDebit != this.totalCredit){\r\n      this.totalsmatch = 0;\r\n    }\r\n    else {\r\n      let id: number;\r\n      //sets the input date\r\n      this.journalNew.Date = new Date();\r\n      this.journalNew.Date.setFullYear(this.model.date.year, this.model.date.month - 1, this.model.date.day);\r\n      this.journalNew.CreatedBy = this.comp.getUserName();\r\n      this.journalNew.Reference = this.makeRandomRef();\r\n      console.log(this.journalNew.Date);\r\n      //sending prinmary journal data\r\n      let response = await this.journalServ.addJournal(this.journalNew).toPromise();\r\n      id = response.JId;\r\n      console.log(\"id: \"+id);\r\n      //post the debit accounts\r\n      for(let debitAccounts of this.journalAccountsDebit){\r\n        debitAccounts.JournalJId = id;\r\n        debitAccounts.NormalSide = 'Debit';\r\n        //set account type\r\n        for(let acc of this.accounts){\r\n          if(acc.accountName == debitAccounts.AccountName){\r\n            debitAccounts.Type = acc.accountType;\r\n            break;\r\n          }\r\n        }\r\n        await this.journalServ.addJournalAccounts(debitAccounts).toPromise();\r\n        console.log('posted debit');\r\n      }\r\n      //post credit accounts\r\n      for(let creditAccounts of this.journalAccountsCredit){\r\n        creditAccounts.JournalJId = id;\r\n        creditAccounts.NormalSide = 'Credit';\r\n        //set account type\r\n        for(let acc of this.accounts){\r\n          if(acc.accountName == creditAccounts.AccountName){\r\n            creditAccounts.Type = acc.accountType;\r\n            break;\r\n          }\r\n        }\r\n        await this.journalServ.addJournalAccounts(creditAccounts).toPromise();\r\n        console.log('posted credit');\r\n      }\r\n      //sending source file\r\n\r\n      if(this.selectedFile != null){\r\n        let uploadData = new FormData();\r\n        uploadData.append('file', this.selectedFile);\r\n        //uploadData.append('#journalId', JSON.stringify(id));\r\n        console.log('File uploaded: ' + this.selectedFile.name)\r\n        this.http.post(this.fileUploadURL, uploadData , httpOptions).subscribe( (result) => {\r\n          console.log('result');\r\n          this.myInputVariable.nativeElement.value = \"\";\r\n        });\r\n      }\r\n\r\n      this.viewJournals();\r\n      console.log(response);\r\n      this.close();\r\n    }\r\n  }\r\n  //create a random set of characters for reference\r\n  makeRandomRef(){\r\n    let text = \"\";\r\n    let poss = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n\r\n    for (var i = 0; i < 7; i++)\r\n      text += poss.charAt(Math.floor(Math.random() * poss.length));\r\n\r\n    return text;\r\n  }\r\n\r\n  selectFile(files: FileList): void{\r\n    this.selectedFile = files.item(0);\r\n    //console.log('selected File' + this.selectedFile.name);\r\n  }\r\n\r\n\r\n  //posting journal\r\nasync approveJournal(journal){\r\n\r\n    for(let account of journal.JournalAccounts){\r\n      for(let CoA of this.accounts ){\r\n        let ledger = new GeneralLedger();\r\n        if(account.AccountName == CoA.accountName){\r\n          ledger.Date = journal.Date;\r\n          ledger.AccountNumber = CoA.accountNumber;\r\n          ledger.AccountName = account.AccountName;\r\n          ledger.NormalSide = CoA.normalSide;\r\n          ledger.CreditAmount = account.CreditAmount;\r\n          ledger.DebitAmount = account.DebitAmount;\r\n          ledger.Reference = journal.Reference;\r\n          ledger.Description = journal.Description;\r\n          await this.ledgerServ.addLedger(ledger).toPromise();\r\n          console.log('ledger entries added');\r\n          //put if statement here for updating current balance for CoA\r\n          if(ledger.NormalSide == 'Debit'){\r\n            if(ledger.DebitAmount != null){\r\n              CoA.currentBalance = +CoA.currentBalance + +ledger.DebitAmount;\r\n              await this.coaService.updateAccount(CoA).toPromise();\r\n\r\n            }\r\n            else{\r\n              CoA.currentBalance = +CoA.currentBalance - +ledger.CreditAmount;\r\n              await this.coaService.updateAccount(CoA).toPromise();\r\n            }\r\n          }\r\n          //credit normal side\r\n          else{\r\n            if(ledger.DebitAmount != null){\r\n              CoA.currentBalance = +CoA.currentBalance - +ledger.DebitAmount;\r\n              await this.coaService.updateAccount(CoA).toPromise();\r\n\r\n            }\r\n            else{\r\n              CoA.currentBalance = +CoA.currentBalance + +ledger.CreditAmount;\r\n              await this.coaService.updateAccount(CoA).toPromise();\r\n\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    journal.acceptance = 'Approved';\r\n    let journaltemp = new Journal();\r\n    journaltemp.JId = journal.JId;\r\n    journaltemp.acceptance = journal.acceptance;\r\n    journaltemp.Description = journal.Description;\r\n    journaltemp.Date = journal.Date;\r\n    journaltemp.Reference = journal.Reference;\r\n    journaltemp.CreatedBy = journal.CreatedBy;\r\n    console.log(journaltemp);\r\n    this.journalServ.updateJournal(journaltemp).subscribe((result) => {\r\n      console.log(result);\r\n    });\r\n\r\n}\r\n\r\nasync declineJournal(journal){\r\n  journal.acceptance = 'Declined';\r\n  let journaltemp = new Journal();\r\n  journaltemp.JId = journal.JId;\r\n  journaltemp.acceptance = journal.acceptance;\r\n  journaltemp.Description = journal.Description;\r\n  journaltemp.Date = journal.Date;\r\n  journaltemp.Reference = journal.Reference;\r\n  journaltemp.CreatedBy = journal.CreatedBy;\r\n  console.log(journaltemp);\r\n  this.journalServ.updateJournal(journaltemp).subscribe((result) => {\r\n    console.log(result);\r\n  });\r\n\r\n}\r\n\r\nviewLedger(accountName){\r\n    this.data.setAccount(accountName);\r\n  this.router.navigate(['UserPage/ledger', accountName]);\r\n}\r\n\r\nsetApprovalType(type){\r\n    this.approvalType = type;\r\n  this.viewJournalsSort('JId', 'ASC', 'all', '', this.approvalType);\r\n}\r\n\r\n\r\n\r\n\r\n  stuff(){\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"#image {\\r\\n  background-image:url('logo.png');\\r\\n  background-position: center;\\r\\n  background-size: 200px 350px;\\r\\n  width: 200px;\\r\\n  height: 350px;\\r\\n\\r\\n}\\r\\n\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 10%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n\\r\\n<div id=\\\"center\\\">\\r\\n  <div id=\\\"image\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-container [ngSwitch]=\\\"toggle\\\">\\r\\n  <app-add-user-login *ngSwitchCase=\\\"2\\\"></app-add-user-login>\\r\\n  <app-login *ngSwitchCase=\\\"1\\\"></app-login>\\r\\n  <app-reset-password *ngSwitchCase=\\\"3\\\"></app-reset-password>\\r\\n</ng-container>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { AddUserComponent } from '../add-user/add-user.component';\r\n\r\n@Component({\r\n  selector: 'app-login-home',\r\n  templateUrl: './login-home.component.html',\r\n  styleUrls: ['./login-home.component.css'],\r\n})\r\nexport class LoginHomeComponent implements OnInit {\r\n  toggle: number;\r\n\r\n  constructor( private data: SharedDataService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.data.currentToggle.subscribe(num => this.toggle = num);\r\n  }\r\n}\r\n","module.exports = \"h2{\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nh3{\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nlabel.required { color: white; }\\r\\n\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 10%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#center2 {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n\\r\\n}\\r\\n\\r\\n#height {\\r\\n  margin-top:30px;\\r\\n  width: 400px\\r\\n}\\r\\n\\r\\n#button1{\\r\\n  color: white;\\r\\n  position:absolute;\\r\\n  right:6%;\\r\\n}\\r\\n\\r\\n#button2{\\r\\n  color: white;\\r\\n  margin: 0 auto;\\r\\n  position: relative;\\r\\n  right: -12%;\\r\\n}\\r\\n\\r\\nhr{\\r\\n  width: 250px;\\r\\n  border-color: white;\\r\\n}\\r\\n\"","module.exports = \"<form #addUserForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div id=\\\"center2\\\">\\r\\n    <div id=\\\"height\\\">\\r\\n      <h3>Login</h3>\\r\\n      <div class=\\\"horizontalgap\\\" style=\\\"width:250px\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class='required' for=\\\"username\\\">Username</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" (ngModelChange)=\\\"resetError()\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"username\\\"\\r\\n            name=\\\"username\\\" #usernam=\\\"ngModel\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"usernam.valid || usernam.pristine\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Username is required\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"horizontalgap\\\" style=\\\"width:250px\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class='required' for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" (ngModelChange)=\\\"resetError()\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"password\\\"\\r\\n            name=\\\"password\\\" #passw=\\\"ngModel\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"passw.valid || passw.pristine\\\" style=\\\"width: 250px; height: 30px\\\">\\r\\n        <label class=\\\"alert alert-danger\\\" style=\\\"width:250px; padding-top: 6px;\\\"> Password is required </label>\\r\\n      </div>\\r\\n\\r\\n      <p>\\r\\n\\r\\n      </p>\\r\\n      <div *ngIf=\\\"isActive == 2\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n        Account has been deactivated\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!addUserForm.form.valid\\\">Login</button>\\r\\n        <button class=\\\"btn btn-link\\\" (click)=\\\"toggler()\\\" id=\\\"button1\\\">Register</button>\\r\\n\\r\\n  </div>\\r\\n      <hr/>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-link\\\" (click)=\\\"toggleReset()\\\" id=\\\"button2\\\" >Reset Password</button>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"notLogged\\\" class=\\\"alert alert-danger\\\" style=\\\"width: 250px;\\\">\\r\\n        Incorrect username or password\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</form>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserLogService } from '../services/user-log.service';\r\nimport { LoginService } from '../services/login.service';\r\nimport { AppComponent } from '../app.component';\r\nimport { LoginHomeComponent} from '../login-home/login-home.component';\r\nimport { User } from '../user';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\n\r\n@Component({\r\n  providers: [AppComponent, LoginHomeComponent],\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  password: string;\r\n  username: string;\r\n  notLogged: Boolean = true;\r\n  invalidIndicator = '';\r\n  user: User;\r\n  isActive = 1;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private comp: AppComponent,\r\n    private logData: UserLogService,\r\n    private home: LoginHomeComponent,\r\n    private data: SharedDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loginService.sendData(this.username, this.password).subscribe(\r\n      user => {\r\n        this.user = user;\r\n        console.log('Login success, userType = ', this.user.userName);\r\n\r\n        if (this.user.userId > 0) {\r\n          this.router.navigate(['UserPage']);\r\n          this.logData.create(this.username, 'User successful login').subscribe();\r\n          this.comp.setSession(this.user.userId, this.user.userName, this.user.userRole, this.user.firstName, this.user.lastName);\r\n          this.isActive = 1;\r\n        }\r\n        else if (this.user.userId === -2) {\r\n          this.isActive = 2;\r\n        }\r\n        else {\r\n          this.invalidIndicator = 'Login failed';\r\n          this.isActive = 1;\r\n          this.notLogged = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  // error goes away when changes are put into input\r\n  resetError() {\r\n    this.isActive = 1;\r\n  }\r\n\r\n  toggler() {\r\n    this.data.changeToggle(2);\r\n\r\n  }\r\n\r\n  toggleReset() {\r\n    this.data.changeToggle(3);\r\n\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"h3, label, p {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#center {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#center2 {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#center3 {\\r\\n  position: relative;\\r\\n  width: 14%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#height {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n\\r\\n#height2 {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n\\r\\n#height3 {\\r\\n  margin-top:30px;\\r\\n  width: 250px\\r\\n}\\r\\n\"","module.exports = \"<form #addUserForm=\\\"ngForm\\\" >\\r\\n  <div id=\\\"center\\\" *ngIf=\\\"resetPage == 1\\\">\\r\\n    <div id=\\\"height\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"firstName\\\">Enter your username</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"Username\\\"\\r\\n           required\\r\\n           [(ngModel)]=\\\"username\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\">\\r\\n  \\r\\n      <div class=\\\"btn-group btn-group-sm\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"onContinue()\\\">Continue</button>\\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n      <div *ngIf=\\\"usernameExist == 1\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n        Username does not exist\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"center2\\\" *ngIf=\\\"resetPage == 2\\\">\\r\\n    <div id=\\\"height2\\\">\\r\\n      <label >{{response.question}}</label>\\r\\n      <div>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"answer\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"answer\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div class=\\\"btn-group btn-group-sm\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack2()\\\">Back</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"sendEmail()\\\">Continue</button>\\r\\n      </div>\\r\\n      <p>\\r\\n  \\r\\n      </p>\\r\\n      <div *ngIf=\\\"answerCorrect == 1\\\" class=\\\"alert alert-danger\\\"  style=\\\"width: 250px;\\\">\\r\\n        Incorrect answer\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div id=\\\"center3\\\" *ngIf=\\\"resetPage == 3\\\">\\r\\n      <div id=\\\"height3\\\">\\r\\n        <label>An email has been sent to {{emailResult}}!</label>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"goBack()\\\">Continue</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n  </form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../services/login.service';\r\nimport {SharedDataService } from '../services/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  username: string;\r\n  username2: string;\r\n  answer: string;\r\n  resetPage = 1;\r\n  usernameExist = 0;\r\n  answerCorrect = 0;\r\n  response: {exists: number, question: string, answer: string};\r\n  emailResult = '';\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private data: SharedDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onContinue(){\r\n    this.loginService.resetPasswordSend(this.username).subscribe(response =>{\r\n      this.response = response;\r\n      this.username2 = this.username;\r\n      if(this.response.exists === 0){\r\n        this.usernameExist = 1;\r\n        console.log('error');\r\n      }\r\n      else{\r\n        this.resetPage = 2;\r\n        console.log('enable button');\r\n      }\r\n    });\r\n  }\r\n\r\n  sendEmail(){\r\n    this.loginService.sendEmail(this.username).subscribe( response => {\r\n      console.log(response);\r\n      this.emailResult = response;\r\n      this.resetPage = 3;\r\n    });\r\n  }\r\n\r\n  onContinue2(){\r\n    if(this.answer !== this.response.answer){\r\n      this.answerCorrect = 1;\r\n    }\r\n    else{\r\n      console.log(\"password accepted\");\r\n    }\r\n\r\n  }\r\n\r\n  goBack(): void {\r\n    this.data.changeToggle(1);\r\n  }\r\n  goBack2(): void {\r\n    this.resetPage = 1;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CoA } from '../chart-of-accounts';\r\nimport {User} from '../user';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    \"Access-Control-Allow-Headers\": '*', \r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoAService {\r\n  private coaUrl = 'http://localhost:8080/api/chartOfAccounts';  // URL to web api\r\n  private findAccountNameUrl = 'http://localhost:8080/api/chartOfAccounts/account';\r\n  private chartSortUrl = 'http://localhost:8080/api/chartSort';\r\n  private nameCheckUrl = 'http://localhost:8080/api/accountNameCheck';\r\n  private numberCheckUrl = 'http://localhost:8080/api/accountNumberCheck';\r\n  private  getByNameUrl = 'http://localhost:8080/api/getAccountByName';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  findAll(): Observable<CoA[]> {\r\n    return this.http.get<CoA[]>(this.coaUrl, httpOptions);\r\n  }\r\n\r\n  findAllSort(column, direction, columnSearch, criteria): Observable<CoA[]> {\r\n    return this.http.post<CoA[]>(this.chartSortUrl, {column: column, direction: direction, columnSearch: columnSearch,\r\n      criteria: criteria}, httpOptions);\r\n  }\r\n\r\n  addAccount(coa: CoA): Observable<CoA> {\r\n    return this.http.post<CoA>(this.coaUrl, coa, httpOptions);\r\n  }\r\n\r\n  getAccount(account: number): Observable<any> {\r\n    return this.http.get(`${this.coaUrl}/${account}`, httpOptions);\r\n  }\r\n  getByName(accountName): Observable<any>{\r\n      return this.http.post<CoA>(this.getByNameUrl, {accountName: accountName}, httpOptions);\r\n  }\r\n\r\n  updateAccount(account): Observable<any> {\r\n    const body = JSON.stringify(account);\r\n    return this.http.put(this.coaUrl, body, httpOptions);\r\n  }\r\n\r\n  compareAccountName(accountName): Observable<any>{\r\n    return this.http.post<CoA>(this.nameCheckUrl, {accountName: accountName}, httpOptions);\r\n  }\r\n  compareAccountNumber(accountNumber): Observable<any>{\r\n    return this.http.post<CoA>(this.numberCheckUrl, {accountNumber: accountNumber}, httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {GeneralLedger} from '../generalLedger'\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    \"Access-Control-Allow-Headers\": '*',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeneralLedgerService {\r\n  private ledgerURL = 'http://localhost:8080/api/generalLedger';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  findAll(): Observable<GeneralLedger[]> {\r\n    return this.http.get<GeneralLedger[]>(this.ledgerURL, httpOptions);\r\n  }\r\n\r\n  addLedger(ledger: GeneralLedger): Observable<GeneralLedger> {\r\n    return this.http.post<GeneralLedger>(this.ledgerURL, ledger, httpOptions);\r\n  }\r\n  getLedger(id: number): Observable<any>{\r\n    return this.http.get(`${this.ledgerURL}/${id}`, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Journal } from '../journal';\r\nimport { JournalAccount } from '../journalAccount';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../user';\r\nimport {CoA} from '../chart-of-accounts';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    \"Access-Control-Allow-Headers\": '*',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\r\n  })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JournalizeService {\r\n  private journalUrl = 'http://localhost:8080/api/journal';\r\n  private journalSort = 'http://localhost:8080/api/journalSort';\r\n  private journalAccountUrl = 'http://localhost:8080/api/journalAccount';\r\n\r\n  //'/api/journal'\r\n  //'/api/journalAccount'\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n //operations for Journal\r\n  findAll(): Observable<Journal[]> {\r\n    return this.http.get<Journal[]>(this.journalUrl, httpOptions);\r\n  }\r\n\r\n  findAllSort(column, direction, columnSearch, criteria, approvalType): Observable<Journal[]> {\r\n    return this.http.post<Journal[]>(this.journalSort, {column: column, direction: direction, columnSearch: columnSearch,\r\n      criteria: criteria, approvalType: approvalType}, httpOptions);\r\n  }\r\n\r\n\r\n\r\n  getJournal(id: number): Observable<any>{\r\n    return this.http.get(`${this.journalUrl}/${id}`, httpOptions);\r\n  }\r\n  addJournal(journal: Journal): Observable<Journal> {\r\n    return this.http.post<Journal>(this.journalUrl, journal, httpOptions);\r\n  }\r\n  updateJournal(journal): Observable<any> {\r\n    const body = JSON.stringify(journal);\r\n    return this.http.put(this.journalUrl, body, httpOptions);\r\n  }\r\n\r\n\r\n  findAllAccounts(): Observable<JournalAccount[]> {\r\n    return this.http.get<JournalAccount[]>(this.journalAccountUrl, httpOptions);\r\n  }\r\n  getJournaAccountsl(id: number): Observable<any>{\r\n    return this.http.get(`${this.journalAccountUrl}/${id}`, httpOptions);\r\n  }\r\n  addJournalAccounts(journalAccount: JournalAccount): Observable<JournalAccount> {\r\n    return this.http.post<JournalAccount>(this.journalAccountUrl, journalAccount, httpOptions);\r\n  }\r\n  updateJournalAccounts(journalAccount): Observable<any> {\r\n    const body = JSON.stringify(journalAccount);\r\n    return this.http.put(this.journalAccountUrl, body, httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../user';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  private customersUrl = 'http://localhost:8080/api/users';\r\n  private resetURL = 'http://localhost:8080/api/resetPassword';\r\n  private emailURL = 'http://localhost:8080/api/emailSend';\r\n  private loginUrl = 'http://localhost:8080/api/loginVerify';\r\n  private sessionURL = 'http://localhost:8080/api/checkSession';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n  sendData (username, password): Observable<any> {\r\n    return this.http.post(this.loginUrl, {userName: username, userPassword: password}, httpOptions);\r\n  }\r\n  resetPasswordSend (username): Observable<any> {\r\n    return this.http.post(this.resetURL, {username: username}, httpOptions);\r\n  }\r\n  sendEmail (username): Observable<any> {\r\n    return this.http.post(this.emailURL, {userName: username}, httpOptions);\r\n  }\r\n  getSession (): Observable<any> {\r\n    return this.http.get(this.sessionURL, httpOptions);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedDataService {\r\n\r\n  private loginToggle = new BehaviorSubject(1);\r\n  currentToggle = this.loginToggle.asObservable();\r\n\r\n  accountName = '';\r\n\r\n  accountRef = '';\r\n\r\n\r\n  constructor() { }\r\n  changeToggle(num: number) {\r\n    this.loginToggle.next(num);\r\n  }\r\n  setAccount(account: string){\r\n    this.accountName = account;\r\n  }\r\n  getAccount(){\r\n    return this.accountName;\r\n  }\r\n  setReference(ref: string){\r\n    this.accountRef = ref;\r\n  }\r\n  getReference(){\r\n    return this.accountRef;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ \r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    \"Access-Control-Allow-Headers\": '*', \r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\r\n   })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserLogService {\r\n  private log = 'http://localhost:8080/api/log';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n\r\n  create(username, actionType): Observable<any> {\r\n    return this.http.post(this.log, {userName: username, actionType: actionType}, httpOptions)\r\n  }\r\n\r\n  findAll(): Observable<any> {\r\n    return this.http.get(this.log, httpOptions);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of,  } from 'rxjs';\r\nimport { User } from '../user';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Headers': '*',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private usersUrl = 'http://localhost:8080/api/users';  // URL to web api\r\n  private usersSortUrl = 'http://localhost:8080/api/usersSort';\r\n  private compareUserNameURL = 'http://localhost:8080/api/userNameCheck';\r\n  private compareEmailURL = 'http://localhost:8080/api/passwordCheck';\r\n  private getActiveURL = 'http://localhost:8080/api/getActive';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  findAll(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.usersUrl, httpOptions);\r\n  }\r\n\r\n  findAllSort(column, direction, columnSearch, criteria): Observable<User[]> {\r\n    return this.http.post<User[]>(this.usersSortUrl, {column: column, direction: direction, columnSearch: columnSearch,\r\n    criteria: criteria}, httpOptions);\r\n  }\r\n\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.usersUrl);\r\n  }\r\n\r\n  // getUser(userId: number): Observable<User> {\r\n  //   const url = `${this.usersUrl}/${userId}`;\r\n  //   return this.http.get<User>(url);\r\n  // }\r\n\r\n  getUser(id: number): Observable<any> {\r\n    return this.http.get(`${this.usersUrl}/${id}`, httpOptions);\r\n  }\r\n\r\n  addUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.usersUrl, user, httpOptions);\r\n  }\r\n\r\n  deleteUser(user: User | number): Observable<User> {\r\n    const userId = typeof user === 'number' ? user : user.userId;\r\n    const url = `${this.usersUrl}/${userId}`;\r\n\r\n    return this.http.delete<User>(url, httpOptions);\r\n  }\r\n\r\n  updateUser(user): Observable<any> {\r\n    const body = JSON.stringify(user);\r\n    return this.http.put(this.usersUrl, body, httpOptions);\r\n  }\r\n\r\n  compareUsername(username): Observable<any> {\r\n    return this.http.post<User>(this.compareUserNameURL, {username: username}, httpOptions);\r\n  }\r\n\r\n  compareEmail(email): Observable<any> {\r\n    return this.http.post<User>(this.compareEmailURL, {email: email}, httpOptions);\r\n  }\r\n  // check if user is active\r\n}\r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\n#ledgerTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"form-group\\\" style=\\\"margin: auto; width: 50%;\\\">\\r\\n  <table id=\\\"ledgerTable\\\" style=\\\" table-layout:fixed\\\">\\r\\n    <tr>\\r\\n      <th colspan=\\\"4\\\" class=\\\"col-xs-1 text-center\\\">Trial Balance</th>\\r\\n    <tr>\\r\\n    <tr>\\r\\n      <th >Title of Account</th>\\r\\n      <th >Account Number</th>\\r\\n      <th >Debit Balance</th>\\r\\n      <th >Credit Balance</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let account of accountsArranged\\\">\\r\\n      <td>{{ account.accountName }}</td>\\r\\n      <td>{{ account.accountNumber }}</td>\\r\\n      <td *ngIf=\\\"account.normalSide == 'Debit'\\\" style=\\\"text-align: right;\\\">{{ account.currentBalance | number : '1.2-2'}}</td>\\r\\n      <td *ngIf=\\\"account.normalSide == 'Debit'\\\" style=\\\"text-align: right;\\\">&nbsp;</td>\\r\\n      <td *ngIf=\\\"account.normalSide == 'Credit'\\\" style=\\\"text-align: right;\\\">&nbsp;</td>\\r\\n      <td *ngIf=\\\"account.normalSide == 'Credit'\\\" style=\\\"text-align: right;\\\">{{ account.currentBalance | number : '1.2-2'}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th ></th>\\r\\n      <th ></th>\\r\\n      <th style=\\\"text-align: right;\\\">{{debitTotal | number : '1.2-2'}}</th>\\r\\n      <th style=\\\"text-align: right;\\\">{{creditTotal | number : '1.2-2'}}</th>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {CoAService} from '../services/coa.service';\r\nimport {CoA} from '../chart-of-accounts';\r\n\r\n@Component({\r\n  selector: 'app-trial-balance',\r\n  templateUrl: './trial-balance.component.html',\r\n  styleUrls: ['./trial-balance.component.css']\r\n})\r\nexport class TrialBalanceComponent implements OnInit {\r\n  accounts = [];\r\n  accountsArranged = [];\r\n  debitTotal = 0;\r\n  creditTotal = 0;\r\n\r\n  assetslist = [];\r\n  liabilitiesList = [];\r\n  equitList = [];\r\n  revenueList = [];\r\n  expensesList = [];\r\n\r\n  constructor(\r\n    private cserv: CoAService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.debitTotal = 0;\r\n    this.creditTotal = 0;\r\n    this.viewAccounts();\r\n    console.log('hello');\r\n\r\n  }\r\n\r\n  async viewAccounts() {\r\n    //get list of chart of accounts\r\n    let result = await this.cserv.findAllSort('caId','ASC', 'All', null).toPromise();\r\n    this.accounts = result;\r\n    //arranging accounts by type\r\n    for(let acc of this.accounts){\r\n      if(acc.accountType == 'Assets'){\r\n        this.assetslist.push(acc);\r\n      }\r\n      else if(acc.accountType == 'Liability'){\r\n        this.liabilitiesList.push(acc);\r\n      }\r\n      else if(acc.accountType == 'Equity'){\r\n        this.equitList.push(acc);\r\n      }\r\n      else if(acc.accountType == 'Revenue'){\r\n        this.revenueList.push(acc);\r\n      }\r\n      else{\r\n        this.expensesList.push(acc);\r\n      }\r\n    }\r\n    //put arranged lists into one list\r\n\r\n    for(let asset of this.assetslist){\r\n      this.accountsArranged.push(asset);\r\n    }\r\n    for(let liability of this.liabilitiesList){\r\n      this.accountsArranged.push(liability);\r\n    }\r\n    for(let equity of this.equitList){\r\n      this.accountsArranged.push(equity);\r\n    }\r\n    for(let revenue of this.revenueList){\r\n      this.accountsArranged.push(revenue);\r\n    }\r\n    for(let expense of this.expensesList){\r\n      this.accountsArranged.push(expense);\r\n    }\r\n\r\n\r\n\r\n\r\n    this.totalDebit();\r\n    this.totalCredit();\r\n  }\r\n\r\n  totalDebit(){\r\n    for(let acc of this.accountsArranged){\r\n      console.log(acc.currentBalance);\r\n      if(acc.normalSide == 'Debit'){\r\n        this.debitTotal = +this.debitTotal + +acc.currentBalance;\r\n      }\r\n    }\r\n  }\r\n  totalCredit(){\r\n    for(let acc of this.accountsArranged){\r\n      console.log(acc.currentBalance);\r\n      if(acc.normalSide == 'Credit'){\r\n        this.creditTotal = +this.creditTotal + +acc.currentBalance;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"h3, label, p {\\r\\n  color: white;\\r\\n}\\r\\ntd, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\ntable, h3, h2, td {\\r\\n  color: white;\\r\\n}\\r\\n#logTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 40%;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n\\r\\n\\r\\n<div>\\r\\n  <table id=\\\"logTable\\\">\\r\\n    <tr>\\r\\n      <th>Username</th>\\r\\n      <th>Action Type</th>\\r\\n      <th></th>\\r\\n      <th>Time</th>\\r\\n    <tr *ngFor=\\\"let log of logs\\\">\\r\\n      <td>{{ log.userName }}</td>\\r\\n      <td>{{ log.actionType }}</td>\\r\\n      <td></td>\\r\\n      <td>{{ log.createdAt | date: 'MM/dd/yyyy  HH:mm:ss'}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserLogService} from '../services/user-log.service';\r\n\r\n@Component({\r\n  selector: 'app-user-log',\r\n  templateUrl: './user-log.component.html',\r\n  styleUrls: ['./user-log.component.css']\r\n})\r\nexport class UserLogComponent implements OnInit {\r\n  logs = [];\r\n\r\n  constructor(\r\n    private logData: UserLogService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.onLog();\r\n  }\r\n\r\n  onLog() {\r\n    this.logData.findAll().subscribe(\r\n      (userLog) => {\r\n        this.logs = userLog;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"td, th {\\r\\n  border: 1px solid #6e7d93;\\r\\n  text-align: left;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\ntr:nth-child(even) {\\r\\n  background-color: #6e7d93;\\r\\n}\\r\\n\\r\\ntable, h3, h2, td {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#accountTable {\\r\\n  font-family: arial, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  height: 100%;\\r\\n  width: 200px;\\r\\n  position: fixed;\\r\\n  z-index: 1;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  background-color: #161616;\\r\\n  overflow-x: hidden;\\r\\n  padding-top: 20px;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.right{\\r\\n  margin-left: 200px;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<form #adminForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n  <div class=\\\"sidenav\\\">\\r\\n    <div class = \\\"container-fluid\\\">\\r\\n      <h2> {{indicator}} </h2>\\r\\n      <div>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewHome()\\\" id=\\\"button0\\\" >Home </button>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewUserList()\\\" id=\\\"button1\\\" *ngIf=\\\"access == 1 || access == 2\\\">User list</button>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewLog()\\\" id=\\\"button2\\\" *ngIf=\\\"access == 1\\\">User log</button>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewCoA()\\\" id=\\\"button3\\\" >Chart of accounts</button>\\r\\n      <!--Admin can access the journal just for testing purposes -->\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewJournal()\\\" id=\\\"button4\\\" *ngIf=\\\"access == 3 || access == 2\\\" >Journal</button>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewGLedger()\\\" id=\\\"button6\\\" *ngIf=\\\"access == 3 || access == 2\\\">General Ledger</button>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"viewTrialBalance()\\\" id=\\\"button7\\\" *ngIf=\\\"access == 3 || access == 2\\\">Trial Balance</button>\\r\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"logOut()\\\" id=\\\"button5\\\" >Log out</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"right\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n      <!--\\r\\n      <ng-container [ngSwitch]=\\\"currentpage\\\">\\r\\n        <app-home-screen *ngSwitchCase=\\\"0\\\"></app-home-screen>\\r\\n        <app-chart-of-accounts *ngSwitchCase=\\\"1\\\"></app-chart-of-accounts>\\r\\n        <app-add-user *ngSwitchCase=\\\"2\\\"></app-add-user>\\r\\n        <app-user-log *ngSwitchCase=\\\"3\\\"></app-user-log>\\r\\n        </ng-container>\\r\\n        -->\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\r\nimport {AppComponent} from '../app.component';\r\nimport { UserLogService } from '../services/user-log.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  providers: [AppComponent],\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css']\r\n})\r\nexport class UserPageComponent implements OnInit {\r\n  indicator = '';\r\n  access = 1;\r\n  logs = [];\r\n  currentpage = 0;\r\n\r\n  constructor(private router: Router, \r\n    private loginService: LoginService, \r\n    private comp: AppComponent, \r\n    private logData: UserLogService,\r\n    private userData: UserService,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.onOpened();\r\n  }\r\n  onOpened() {\r\n      this.indicator = this.comp.getUserName();\r\n      if(this.comp.getRole() === 'admin'){\r\n        this.access = 1;\r\n      }\r\n      else if (this.comp.getRole() === 'manager') {\r\n        this.access = 2;\r\n      }\r\n      else{\r\n        this.access = 3;\r\n      }\r\n  }\r\n\r\n  logOut() {\r\n    this.logData.create(this.comp.getUserName(), 'User Logout').subscribe();\r\n    this.comp.delSession();\r\n    this.router.navigate(['loginHome']);\r\n  }\r\n\r\n\r\n  viewCoA(){\r\n    this.router.navigate(['UserPage/chartOfAccounts']);\r\n  }\r\n  viewUserList(){\r\n    this.router.navigate(['UserPage/userList']);\r\n  }\r\n  viewLog(){\r\n    this.router.navigate(['UserPage/userLogs']);\r\n  }\r\n  viewHome(){\r\n    this.router.navigate(['UserPage/home']);\r\n  }\r\n  viewJournal(){\r\n    this.router.navigate(['UserPage/journal']);\r\n  }\r\n  viewGLedger(){\r\n    this.router.navigate(['UserPage/generalLedger']);\r\n  }\r\n\r\n  viewTrialBalance(){\r\n    this.router.navigate(['UserPage/trial-balance'])\r\n\r\n  }\r\n}\r\n","import DateTimeFormat = Intl.DateTimeFormat;\r\n\r\nexport class User {\r\n  userId: number;\r\n  userName: string;\r\n  userRole: string;\r\n  userPassword: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  securityQ: string;\r\n  securityA: string;\r\n  lastUpdatePassword: Date;\r\n  passwordExpire: Date;\r\n  active: number;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}